webpackHotUpdate_N_E("pages/index",{

/***/ "./components/layouts/DetallesProducto.jsx":
/*!*************************************************!*\
  !*** ./components/layouts/DetallesProducto.jsx ***!
  \*************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* WEBPACK VAR INJECTION */(function(module) {/* harmony import */ var C_Users_Camilo_Desktop_camilo_react_estudio_pryectos_de_juan_producthuntnext_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/slicedToArray */ "./node_modules/@babel/runtime/helpers/esm/slicedToArray.js");
/* harmony import */ var _emotion_styled_base__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @emotion/styled/base */ "./node_modules/@emotion/styled/base/dist/emotion-styled-base.browser.esm.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var date_fns_formatDistanceToNow__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! date-fns/formatDistanceToNow */ "./node_modules/date-fns/formatDistanceToNow/index.js");
/* harmony import */ var date_fns_formatDistanceToNow__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(date_fns_formatDistanceToNow__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var date_fns_locale__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! date-fns/locale */ "./node_modules/date-fns/locale/index.js");
/* harmony import */ var date_fns_locale__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(date_fns_locale__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! next/link */ "./node_modules/next/link.js");
/* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(next_link__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _hooks_useOnScreen__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../hooks/useOnScreen */ "./hooks/useOnScreen.jsx");
/* harmony import */ var _emotion_react__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @emotion/react */ "./node_modules/@emotion/react/dist/emotion-react.browser.esm.js");



var _jsxFileName = "C:\\Users\\Camilo\\Desktop\\camilo\\react-estudio\\pryectos-de-juan\\producthuntnext\\components\\layouts\\DetallesProducto.jsx",
    _this = undefined,
    _s = $RefreshSig$();

function _EMOTION_STRINGIFIED_CSS_ERROR__() { return "You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop)."; }








var Producto = Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_1__["default"])("li", {
  target: "e1s63vuv6",
  label: "Producto"
})(false ? undefined : {
  name: "11hm3gn",
  styles: "@media (max-width: 400px){display:flex;flex-direction:column;margin:50px;}@media (min-width: 1000px){padding:4rem;display:flex;justify-content:space-between;align-items:center;border:1px solid #e1e1e1;}",
  map: "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcQ2FtaWxvXFxEZXNrdG9wXFxjYW1pbG9cXHJlYWN0LWVzdHVkaW9cXHByeWVjdG9zLWRlLWp1YW5cXHByb2R1Y3RodW50bmV4dFxcY29tcG9uZW50c1xcbGF5b3V0c1xcRGV0YWxsZXNQcm9kdWN0by5qc3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBTzBCIiwiZmlsZSI6IkM6XFxVc2Vyc1xcQ2FtaWxvXFxEZXNrdG9wXFxjYW1pbG9cXHJlYWN0LWVzdHVkaW9cXHByeWVjdG9zLWRlLWp1YW5cXHByb2R1Y3RodW50bmV4dFxcY29tcG9uZW50c1xcbGF5b3V0c1xcRGV0YWxsZXNQcm9kdWN0by5qc3giLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgc3R5bGVkIGZyb20gJ0BlbW90aW9uL3N0eWxlZCc7XHJcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XHJcbmltcG9ydCBmb3JtYXREaXN0YW5jZVRvTm93IGZyb20gJ2RhdGUtZm5zL2Zvcm1hdERpc3RhbmNlVG9Ob3cnO1xyXG5pbXBvcnQgeyBlcyB9IGZyb20gJ2RhdGUtZm5zL2xvY2FsZSc7XHJcbmltcG9ydCBMaW5rIGZyb20gJ25leHQvbGluayc7XHJcbmltcG9ydCB1c2VPblNjcmVlbiBmcm9tICcuLi8uLi9ob29rcy91c2VPblNjcmVlbic7XHJcblxyXG5jb25zdCBQcm9kdWN0byA9IHN0eWxlZC5saWBcclxuICAgIEBtZWRpYSAobWF4LXdpZHRoOiA0MDBweCl7XHJcbiAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAgICAgIG1hcmdpbjogNTBweFxyXG4gICAgfTtcclxuICAgIEBtZWRpYSAobWluLXdpZHRoOiAxMDAwcHgpe1xyXG4gICAgICAgIHBhZGRpbmc6IDRyZW07XHJcbiAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XHJcbiAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgICAgICBib3JkZXI6IDFweCBzb2xpZCAjZTFlMWUxOyAgIFxyXG4gICAgfVxyXG5gO1xyXG5cclxuY29uc3QgRGVzY3JpcGNpb25Qcm9kdWN0byA9IHN0eWxlZC5kaXZgXHJcbiAgICBmbGV4OiAwIDEgNjAwcHg7XHJcbiAgICBkaXNwbGF5OiBncmlkO1xyXG4gICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiAxZnIgM2ZyO1xyXG4gICAgZ2FwOiAycmVtO1xyXG5cclxuICAgIEBtZWRpYShtYXgtd2lkdGg6NDUwcHgpe1xyXG4gICAgICAgIGZsZXg6IDUgNSAzMDBweDtcclxuICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICB9XHJcbmA7XHJcblxyXG5jb25zdCBUaXR1bG8gPSBzdHlsZWQuYWBcclxuICAgIGZvbnQtc2l6ZTogMnJlbTtcclxuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG4gICAgbWFyZ2luOiAwO1xyXG4gICAgJjpob3ZlcntcclxuICAgICAgICBjdXJzb3I6cG9pbnRlcjtcclxuICAgIH1cclxuICAgIEBtZWRpYShtYXgtd2lkdGg6NDUwcHgpe1xyXG4gICAgICAgIGZvbnQtc2l6ZToxLjVyZW07XHJcbiAgICB9XHJcbmA7XHJcblxyXG5jb25zdCBUZXh0b0Rlc2NyaXBjaW9uID0gc3R5bGVkLnBgXHJcbiAgICBmb250LXNpemU6IDEuNnJlbTtcclxuICAgIG1hcmdpbjogMDtcclxuICAgIGNvbG9yOiAjODg4O1xyXG4gICAgQG1lZGlhKG1heC13aWR0aDo0NTBweCl7XHJcbiAgICAgICAgZm9udC1zaXplOjEuNFxyXG4gICAgfVxyXG5gO1xyXG5cclxuY29uc3QgQ29tZW50YXJpb3MgPSBzdHlsZWQuZGl2YFxyXG4gICAgbWFyZ2luLXRvcDogMnJlbTtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAgZGl2e1xyXG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgICAgICBib3JkZXI6IDFweCBzb2xpZCAjZTFlMWUxO1xyXG4gICAgICAgIHBhZGRpbmc6IC4zcmVtIDFyZW07XHJcbiAgICAgICAgbWFyZ2luLXJpZ2h0OiAycmVtO1xyXG4gICAgfVxyXG4gICAgaW1ne1xyXG4gICAgICAgIHdpZHRoOiAycmVtO1xyXG4gICAgICAgIG1hcmdpbi1yaWdodDogMnJlbTtcclxuICAgIH1cclxuICAgIHB7XHJcbiAgICAgICAgZm9udC1zaXplOiAxLjZyZW07XHJcbiAgICAgICAgbWFyZ2luLXJpZ2h0OiAxcmVtO1xyXG4gICAgICAgIGZvbnQtd2VpZ2h0OiA3MDA7XHJcbiAgICAgICAgJjpsYXN0LW9mLXR5cGV7XHJcbiAgICAgICAgICAgIG1hcmdpbjogMDtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICBAbWVkaWEobWF4LXdpZHRoOjQ1MHB4KXtcclxuICAgICAgICBcclxuICAgIH1cclxuYDtcclxuXHJcbmNvbnN0IFZvdG9zID0gc3R5bGVkLmRpdmBcclxuICAgIGZsZXg6IDAgMCBhdXRvO1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgYm9yZGVyOiAxcHggc29saWQgI2UxZTFlMTtcclxuICAgIHBhZGRpbmc6IDFyZW0gM3JlbTtcclxuICAgIGRpdntcclxuICAgICAgICBmb250LXNpemU6IDJyZW07XHJcbiAgICB9XHJcbiAgICBwe1xyXG4gICAgICAgIG1hcmdpbjogMDtcclxuICAgICAgICBmb250LXNpemU6IDJyZW07XHJcbiAgICAgICAgZm9udC13ZWlnaHQ6IDcwMDtcclxuICAgIH1cclxuICAgIEBtZWRpYShtYXgtd2lkdGg6NDUwcHgpe1xyXG4gICAgICAgIFxyXG4gICAgfVxyXG5gO1xyXG5cclxuY29uc3QgSW1hZ2VuID0gc3R5bGVkLmltZ2BcclxuICAgIHdpZHRoOiAyMDBweDtcclxuICAgIEBtZWRpYShtYXgtd2lkdGg6IDQ1MHB4KXtcclxuICAgICAgICB3aWR0aDo1MDBweDtcclxuICAgIH1cclxuICAgIEBtZWRpYShtYXgtd2lkdGg6NDUwcHgpe1xyXG4gICAgICAgIFxyXG4gICAgfVxyXG5cclxuYDtcclxuXHJcblxyXG5jb25zdCBEZXRhbGxlc1Byb2R1Y3RvID0gKHtcclxuICAgIGlkLFxyXG4gICAgY29tZW50YXJpb3MsXHJcbiAgICBjcmVhZG8sXHJcbiAgICBkZXNjcmlwY2lvbixcclxuICAgIGVtcHJlc2EsXHJcbiAgICBub21icmUsXHJcbiAgICB1cmwsXHJcbiAgICBpbWFnZW5VcmwsXHJcbiAgICB2b3Rvc1xyXG59KSA9PiB7XHJcbiAgICBjb25zdCBbc2V0UmVmLCB2aXNpYmxlXSA9IHVzZU9uU2NyZWVuKHsgdGhyZXNob2xkOiAuMSB9KTtcclxuXHJcbiAgICByZXR1cm4gKFxyXG4gICAgICAgIDw+XHJcblxyXG4gICAgICAgICAgICA8UHJvZHVjdG8+XHJcbiAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgdmlzaWJsZSA/IChcclxuICAgICAgICAgICAgICAgICAgICAgICAgPD5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxEZXNjcmlwY2lvblByb2R1Y3RvPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxJbWFnZW4gc3JjPXtpbWFnZW5Vcmx9IGFsdD1cIlwiIC8+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgey8qIHByb2R1Y3RvcyBlcyBlbCBub2JyZSBkZSBsYSBjYXJwZXRhLCBzZSBkZWJlIGNyZWFyICovfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8TGluayBocmVmPVwiL3Byb2R1Y3Rvcy9baWRdXCIgYXM9e2AvcHJvZHVjdG9zLyR7aWR9YH0gPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPFRpdHVsbz57bm9tYnJlfTwvVGl0dWxvPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L0xpbms+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxUZXh0b0Rlc2NyaXBjaW9uPntkZXNjcmlwY2lvbi5zdWJzdHIoMCwgMTAwKSArICcuLi4nfTwvVGV4dG9EZXNjcmlwY2lvbj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPENvbWVudGFyaW9zPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW1nIHNyYz1cIi9zdGF0aWMvaW1nL2NvbWVudGFyaW8ucG5nXCIgYWx0PVwiaW1nXCIgLz5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cD57Y29tZW50YXJpb3MubGVuZ3RofSBDb21lbnRhcmlvczwvcD5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L0NvbWVudGFyaW9zPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cD5QdWJsaWNhZG8gaGFjZToge2Zvcm1hdERpc3RhbmNlVG9Ob3cobmV3IERhdGUoY3JlYWRvKSwgeyBsb2NhbGU6IGVzIH0pfTwvcD5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvRGVzY3JpcGNpb25Qcm9kdWN0bz5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxWb3Rvcz5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2PiYjOTY1MDs8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cD57dm90b3N9PC9wPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9Wb3Rvcz5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPC8+XHJcbiAgICAgICAgICAgICAgICAgICAgKVxyXG4gICAgICAgICAgICAgICAgICAgICAgICA6XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIHJlZj17c2V0UmVmfT48L3NwYW4+XHJcblxyXG4gICAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgPC9Qcm9kdWN0bz5cclxuXHJcblxyXG5cclxuICAgICAgICA8Lz5cclxuICAgIClcclxufVxyXG5leHBvcnQgZGVmYXVsdCBEZXRhbGxlc1Byb2R1Y3RvOyJdfQ== */",
  toString: _EMOTION_STRINGIFIED_CSS_ERROR__
});

var DescripcionProducto = Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_1__["default"])("div", {
  target: "e1s63vuv5",
  label: "DescripcionProducto"
})(false ? undefined : {
  name: "8jdmbt",
  styles: "flex:0 1 600px;display:grid;grid-template-columns:1fr 3fr;gap:2rem;@media(max-width:450px){flex:5 5 300px;display:flex;flex-direction:column;}",
  map: "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcQ2FtaWxvXFxEZXNrdG9wXFxjYW1pbG9cXHJlYWN0LWVzdHVkaW9cXHByeWVjdG9zLWRlLWp1YW5cXHByb2R1Y3RodW50bmV4dFxcY29tcG9uZW50c1xcbGF5b3V0c1xcRGV0YWxsZXNQcm9kdWN0by5qc3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBc0JzQyIsImZpbGUiOiJDOlxcVXNlcnNcXENhbWlsb1xcRGVza3RvcFxcY2FtaWxvXFxyZWFjdC1lc3R1ZGlvXFxwcnllY3Rvcy1kZS1qdWFuXFxwcm9kdWN0aHVudG5leHRcXGNvbXBvbmVudHNcXGxheW91dHNcXERldGFsbGVzUHJvZHVjdG8uanN4Iiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHN0eWxlZCBmcm9tICdAZW1vdGlvbi9zdHlsZWQnO1xyXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xyXG5pbXBvcnQgZm9ybWF0RGlzdGFuY2VUb05vdyBmcm9tICdkYXRlLWZucy9mb3JtYXREaXN0YW5jZVRvTm93JztcclxuaW1wb3J0IHsgZXMgfSBmcm9tICdkYXRlLWZucy9sb2NhbGUnO1xyXG5pbXBvcnQgTGluayBmcm9tICduZXh0L2xpbmsnO1xyXG5pbXBvcnQgdXNlT25TY3JlZW4gZnJvbSAnLi4vLi4vaG9va3MvdXNlT25TY3JlZW4nO1xyXG5cclxuY29uc3QgUHJvZHVjdG8gPSBzdHlsZWQubGlgXHJcbiAgICBAbWVkaWEgKG1heC13aWR0aDogNDAwcHgpe1xyXG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgICAgICBtYXJnaW46IDUwcHhcclxuICAgIH07XHJcbiAgICBAbWVkaWEgKG1pbi13aWR0aDogMTAwMHB4KXtcclxuICAgICAgICBwYWRkaW5nOiA0cmVtO1xyXG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xyXG4gICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICAgICAgYm9yZGVyOiAxcHggc29saWQgI2UxZTFlMTsgICBcclxuICAgIH1cclxuYDtcclxuXHJcbmNvbnN0IERlc2NyaXBjaW9uUHJvZHVjdG8gPSBzdHlsZWQuZGl2YFxyXG4gICAgZmxleDogMCAxIDYwMHB4O1xyXG4gICAgZGlzcGxheTogZ3JpZDtcclxuICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMWZyIDNmcjtcclxuICAgIGdhcDogMnJlbTtcclxuXHJcbiAgICBAbWVkaWEobWF4LXdpZHRoOjQ1MHB4KXtcclxuICAgICAgICBmbGV4OiA1IDUgMzAwcHg7XHJcbiAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAgfVxyXG5gO1xyXG5cclxuY29uc3QgVGl0dWxvID0gc3R5bGVkLmFgXHJcbiAgICBmb250LXNpemU6IDJyZW07XHJcbiAgICBmb250LXdlaWdodDogYm9sZDtcclxuICAgIG1hcmdpbjogMDtcclxuICAgICY6aG92ZXJ7XHJcbiAgICAgICAgY3Vyc29yOnBvaW50ZXI7XHJcbiAgICB9XHJcbiAgICBAbWVkaWEobWF4LXdpZHRoOjQ1MHB4KXtcclxuICAgICAgICBmb250LXNpemU6MS41cmVtO1xyXG4gICAgfVxyXG5gO1xyXG5cclxuY29uc3QgVGV4dG9EZXNjcmlwY2lvbiA9IHN0eWxlZC5wYFxyXG4gICAgZm9udC1zaXplOiAxLjZyZW07XHJcbiAgICBtYXJnaW46IDA7XHJcbiAgICBjb2xvcjogIzg4ODtcclxuICAgIEBtZWRpYShtYXgtd2lkdGg6NDUwcHgpe1xyXG4gICAgICAgIGZvbnQtc2l6ZToxLjRcclxuICAgIH1cclxuYDtcclxuXHJcbmNvbnN0IENvbWVudGFyaW9zID0gc3R5bGVkLmRpdmBcclxuICAgIG1hcmdpbi10b3A6IDJyZW07XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgIGRpdntcclxuICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICAgICAgYm9yZGVyOiAxcHggc29saWQgI2UxZTFlMTtcclxuICAgICAgICBwYWRkaW5nOiAuM3JlbSAxcmVtO1xyXG4gICAgICAgIG1hcmdpbi1yaWdodDogMnJlbTtcclxuICAgIH1cclxuICAgIGltZ3tcclxuICAgICAgICB3aWR0aDogMnJlbTtcclxuICAgICAgICBtYXJnaW4tcmlnaHQ6IDJyZW07XHJcbiAgICB9XHJcbiAgICBwe1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMS42cmVtO1xyXG4gICAgICAgIG1hcmdpbi1yaWdodDogMXJlbTtcclxuICAgICAgICBmb250LXdlaWdodDogNzAwO1xyXG4gICAgICAgICY6bGFzdC1vZi10eXBle1xyXG4gICAgICAgICAgICBtYXJnaW46IDA7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgQG1lZGlhKG1heC13aWR0aDo0NTBweCl7XHJcbiAgICAgICAgXHJcbiAgICB9XHJcbmA7XHJcblxyXG5jb25zdCBWb3RvcyA9IHN0eWxlZC5kaXZgXHJcbiAgICBmbGV4OiAwIDAgYXV0bztcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgIGJvcmRlcjogMXB4IHNvbGlkICNlMWUxZTE7XHJcbiAgICBwYWRkaW5nOiAxcmVtIDNyZW07XHJcbiAgICBkaXZ7XHJcbiAgICAgICAgZm9udC1zaXplOiAycmVtO1xyXG4gICAgfVxyXG4gICAgcHtcclxuICAgICAgICBtYXJnaW46IDA7XHJcbiAgICAgICAgZm9udC1zaXplOiAycmVtO1xyXG4gICAgICAgIGZvbnQtd2VpZ2h0OiA3MDA7XHJcbiAgICB9XHJcbiAgICBAbWVkaWEobWF4LXdpZHRoOjQ1MHB4KXtcclxuICAgICAgICBcclxuICAgIH1cclxuYDtcclxuXHJcbmNvbnN0IEltYWdlbiA9IHN0eWxlZC5pbWdgXHJcbiAgICB3aWR0aDogMjAwcHg7XHJcbiAgICBAbWVkaWEobWF4LXdpZHRoOiA0NTBweCl7XHJcbiAgICAgICAgd2lkdGg6NTAwcHg7XHJcbiAgICB9XHJcbiAgICBAbWVkaWEobWF4LXdpZHRoOjQ1MHB4KXtcclxuICAgICAgICBcclxuICAgIH1cclxuXHJcbmA7XHJcblxyXG5cclxuY29uc3QgRGV0YWxsZXNQcm9kdWN0byA9ICh7XHJcbiAgICBpZCxcclxuICAgIGNvbWVudGFyaW9zLFxyXG4gICAgY3JlYWRvLFxyXG4gICAgZGVzY3JpcGNpb24sXHJcbiAgICBlbXByZXNhLFxyXG4gICAgbm9tYnJlLFxyXG4gICAgdXJsLFxyXG4gICAgaW1hZ2VuVXJsLFxyXG4gICAgdm90b3NcclxufSkgPT4ge1xyXG4gICAgY29uc3QgW3NldFJlZiwgdmlzaWJsZV0gPSB1c2VPblNjcmVlbih7IHRocmVzaG9sZDogLjEgfSk7XHJcblxyXG4gICAgcmV0dXJuIChcclxuICAgICAgICA8PlxyXG5cclxuICAgICAgICAgICAgPFByb2R1Y3RvPlxyXG4gICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgIHZpc2libGUgPyAoXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDw+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8RGVzY3JpcGNpb25Qcm9kdWN0bz5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8SW1hZ2VuIHNyYz17aW1hZ2VuVXJsfSBhbHQ9XCJcIiAvPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHsvKiBwcm9kdWN0b3MgZXMgZWwgbm9icmUgZGUgbGEgY2FycGV0YSwgc2UgZGViZSBjcmVhciAqL31cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPExpbmsgaHJlZj1cIi9wcm9kdWN0b3MvW2lkXVwiIGFzPXtgL3Byb2R1Y3Rvcy8ke2lkfWB9ID5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxUaXR1bG8+e25vbWJyZX08L1RpdHVsbz5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9MaW5rPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8VGV4dG9EZXNjcmlwY2lvbj57ZGVzY3JpcGNpb24uc3Vic3RyKDAsIDEwMCkgKyAnLi4uJ308L1RleHRvRGVzY3JpcGNpb24+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxDb21lbnRhcmlvcz5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBzcmM9XCIvc3RhdGljL2ltZy9jb21lbnRhcmlvLnBuZ1wiIGFsdD1cImltZ1wiIC8+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHA+e2NvbWVudGFyaW9zLmxlbmd0aH0gQ29tZW50YXJpb3M8L3A+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9Db21lbnRhcmlvcz5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHA+UHVibGljYWRvIGhhY2U6IHtmb3JtYXREaXN0YW5jZVRvTm93KG5ldyBEYXRlKGNyZWFkbyksIHsgbG9jYWxlOiBlcyB9KX08L3A+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L0Rlc2NyaXBjaW9uUHJvZHVjdG8+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8Vm90b3M+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdj4mIzk2NTA7PC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHA+e3ZvdG9zfTwvcD5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvVm90b3M+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDwvPlxyXG4gICAgICAgICAgICAgICAgICAgIClcclxuICAgICAgICAgICAgICAgICAgICAgICAgOlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiByZWY9e3NldFJlZn0+PC9zcGFuPlxyXG5cclxuICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIDwvUHJvZHVjdG8+XHJcblxyXG5cclxuXHJcbiAgICAgICAgPC8+XHJcbiAgICApXHJcbn1cclxuZXhwb3J0IGRlZmF1bHQgRGV0YWxsZXNQcm9kdWN0bzsiXX0= */",
  toString: _EMOTION_STRINGIFIED_CSS_ERROR__
});

var Titulo = Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_1__["default"])("a", {
  target: "e1s63vuv4",
  label: "Titulo"
})(false ? undefined : {
  name: "x1jumr",
  styles: "font-size:2rem;font-weight:bold;margin:0;&:hover{cursor:pointer;}@media(max-width:450px){font-size:1.5rem;}",
  map: "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcQ2FtaWxvXFxEZXNrdG9wXFxjYW1pbG9cXHJlYWN0LWVzdHVkaW9cXHByeWVjdG9zLWRlLWp1YW5cXHByb2R1Y3RodW50bmV4dFxcY29tcG9uZW50c1xcbGF5b3V0c1xcRGV0YWxsZXNQcm9kdWN0by5qc3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBbUN1QiIsImZpbGUiOiJDOlxcVXNlcnNcXENhbWlsb1xcRGVza3RvcFxcY2FtaWxvXFxyZWFjdC1lc3R1ZGlvXFxwcnllY3Rvcy1kZS1qdWFuXFxwcm9kdWN0aHVudG5leHRcXGNvbXBvbmVudHNcXGxheW91dHNcXERldGFsbGVzUHJvZHVjdG8uanN4Iiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHN0eWxlZCBmcm9tICdAZW1vdGlvbi9zdHlsZWQnO1xyXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xyXG5pbXBvcnQgZm9ybWF0RGlzdGFuY2VUb05vdyBmcm9tICdkYXRlLWZucy9mb3JtYXREaXN0YW5jZVRvTm93JztcclxuaW1wb3J0IHsgZXMgfSBmcm9tICdkYXRlLWZucy9sb2NhbGUnO1xyXG5pbXBvcnQgTGluayBmcm9tICduZXh0L2xpbmsnO1xyXG5pbXBvcnQgdXNlT25TY3JlZW4gZnJvbSAnLi4vLi4vaG9va3MvdXNlT25TY3JlZW4nO1xyXG5cclxuY29uc3QgUHJvZHVjdG8gPSBzdHlsZWQubGlgXHJcbiAgICBAbWVkaWEgKG1heC13aWR0aDogNDAwcHgpe1xyXG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgICAgICBtYXJnaW46IDUwcHhcclxuICAgIH07XHJcbiAgICBAbWVkaWEgKG1pbi13aWR0aDogMTAwMHB4KXtcclxuICAgICAgICBwYWRkaW5nOiA0cmVtO1xyXG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xyXG4gICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICAgICAgYm9yZGVyOiAxcHggc29saWQgI2UxZTFlMTsgICBcclxuICAgIH1cclxuYDtcclxuXHJcbmNvbnN0IERlc2NyaXBjaW9uUHJvZHVjdG8gPSBzdHlsZWQuZGl2YFxyXG4gICAgZmxleDogMCAxIDYwMHB4O1xyXG4gICAgZGlzcGxheTogZ3JpZDtcclxuICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMWZyIDNmcjtcclxuICAgIGdhcDogMnJlbTtcclxuXHJcbiAgICBAbWVkaWEobWF4LXdpZHRoOjQ1MHB4KXtcclxuICAgICAgICBmbGV4OiA1IDUgMzAwcHg7XHJcbiAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAgfVxyXG5gO1xyXG5cclxuY29uc3QgVGl0dWxvID0gc3R5bGVkLmFgXHJcbiAgICBmb250LXNpemU6IDJyZW07XHJcbiAgICBmb250LXdlaWdodDogYm9sZDtcclxuICAgIG1hcmdpbjogMDtcclxuICAgICY6aG92ZXJ7XHJcbiAgICAgICAgY3Vyc29yOnBvaW50ZXI7XHJcbiAgICB9XHJcbiAgICBAbWVkaWEobWF4LXdpZHRoOjQ1MHB4KXtcclxuICAgICAgICBmb250LXNpemU6MS41cmVtO1xyXG4gICAgfVxyXG5gO1xyXG5cclxuY29uc3QgVGV4dG9EZXNjcmlwY2lvbiA9IHN0eWxlZC5wYFxyXG4gICAgZm9udC1zaXplOiAxLjZyZW07XHJcbiAgICBtYXJnaW46IDA7XHJcbiAgICBjb2xvcjogIzg4ODtcclxuICAgIEBtZWRpYShtYXgtd2lkdGg6NDUwcHgpe1xyXG4gICAgICAgIGZvbnQtc2l6ZToxLjRcclxuICAgIH1cclxuYDtcclxuXHJcbmNvbnN0IENvbWVudGFyaW9zID0gc3R5bGVkLmRpdmBcclxuICAgIG1hcmdpbi10b3A6IDJyZW07XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgIGRpdntcclxuICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICAgICAgYm9yZGVyOiAxcHggc29saWQgI2UxZTFlMTtcclxuICAgICAgICBwYWRkaW5nOiAuM3JlbSAxcmVtO1xyXG4gICAgICAgIG1hcmdpbi1yaWdodDogMnJlbTtcclxuICAgIH1cclxuICAgIGltZ3tcclxuICAgICAgICB3aWR0aDogMnJlbTtcclxuICAgICAgICBtYXJnaW4tcmlnaHQ6IDJyZW07XHJcbiAgICB9XHJcbiAgICBwe1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMS42cmVtO1xyXG4gICAgICAgIG1hcmdpbi1yaWdodDogMXJlbTtcclxuICAgICAgICBmb250LXdlaWdodDogNzAwO1xyXG4gICAgICAgICY6bGFzdC1vZi10eXBle1xyXG4gICAgICAgICAgICBtYXJnaW46IDA7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgQG1lZGlhKG1heC13aWR0aDo0NTBweCl7XHJcbiAgICAgICAgXHJcbiAgICB9XHJcbmA7XHJcblxyXG5jb25zdCBWb3RvcyA9IHN0eWxlZC5kaXZgXHJcbiAgICBmbGV4OiAwIDAgYXV0bztcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgIGJvcmRlcjogMXB4IHNvbGlkICNlMWUxZTE7XHJcbiAgICBwYWRkaW5nOiAxcmVtIDNyZW07XHJcbiAgICBkaXZ7XHJcbiAgICAgICAgZm9udC1zaXplOiAycmVtO1xyXG4gICAgfVxyXG4gICAgcHtcclxuICAgICAgICBtYXJnaW46IDA7XHJcbiAgICAgICAgZm9udC1zaXplOiAycmVtO1xyXG4gICAgICAgIGZvbnQtd2VpZ2h0OiA3MDA7XHJcbiAgICB9XHJcbiAgICBAbWVkaWEobWF4LXdpZHRoOjQ1MHB4KXtcclxuICAgICAgICBcclxuICAgIH1cclxuYDtcclxuXHJcbmNvbnN0IEltYWdlbiA9IHN0eWxlZC5pbWdgXHJcbiAgICB3aWR0aDogMjAwcHg7XHJcbiAgICBAbWVkaWEobWF4LXdpZHRoOiA0NTBweCl7XHJcbiAgICAgICAgd2lkdGg6NTAwcHg7XHJcbiAgICB9XHJcbiAgICBAbWVkaWEobWF4LXdpZHRoOjQ1MHB4KXtcclxuICAgICAgICBcclxuICAgIH1cclxuXHJcbmA7XHJcblxyXG5cclxuY29uc3QgRGV0YWxsZXNQcm9kdWN0byA9ICh7XHJcbiAgICBpZCxcclxuICAgIGNvbWVudGFyaW9zLFxyXG4gICAgY3JlYWRvLFxyXG4gICAgZGVzY3JpcGNpb24sXHJcbiAgICBlbXByZXNhLFxyXG4gICAgbm9tYnJlLFxyXG4gICAgdXJsLFxyXG4gICAgaW1hZ2VuVXJsLFxyXG4gICAgdm90b3NcclxufSkgPT4ge1xyXG4gICAgY29uc3QgW3NldFJlZiwgdmlzaWJsZV0gPSB1c2VPblNjcmVlbih7IHRocmVzaG9sZDogLjEgfSk7XHJcblxyXG4gICAgcmV0dXJuIChcclxuICAgICAgICA8PlxyXG5cclxuICAgICAgICAgICAgPFByb2R1Y3RvPlxyXG4gICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgIHZpc2libGUgPyAoXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDw+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8RGVzY3JpcGNpb25Qcm9kdWN0bz5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8SW1hZ2VuIHNyYz17aW1hZ2VuVXJsfSBhbHQ9XCJcIiAvPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHsvKiBwcm9kdWN0b3MgZXMgZWwgbm9icmUgZGUgbGEgY2FycGV0YSwgc2UgZGViZSBjcmVhciAqL31cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPExpbmsgaHJlZj1cIi9wcm9kdWN0b3MvW2lkXVwiIGFzPXtgL3Byb2R1Y3Rvcy8ke2lkfWB9ID5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxUaXR1bG8+e25vbWJyZX08L1RpdHVsbz5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9MaW5rPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8VGV4dG9EZXNjcmlwY2lvbj57ZGVzY3JpcGNpb24uc3Vic3RyKDAsIDEwMCkgKyAnLi4uJ308L1RleHRvRGVzY3JpcGNpb24+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxDb21lbnRhcmlvcz5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBzcmM9XCIvc3RhdGljL2ltZy9jb21lbnRhcmlvLnBuZ1wiIGFsdD1cImltZ1wiIC8+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHA+e2NvbWVudGFyaW9zLmxlbmd0aH0gQ29tZW50YXJpb3M8L3A+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9Db21lbnRhcmlvcz5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHA+UHVibGljYWRvIGhhY2U6IHtmb3JtYXREaXN0YW5jZVRvTm93KG5ldyBEYXRlKGNyZWFkbyksIHsgbG9jYWxlOiBlcyB9KX08L3A+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L0Rlc2NyaXBjaW9uUHJvZHVjdG8+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8Vm90b3M+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdj4mIzk2NTA7PC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHA+e3ZvdG9zfTwvcD5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvVm90b3M+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDwvPlxyXG4gICAgICAgICAgICAgICAgICAgIClcclxuICAgICAgICAgICAgICAgICAgICAgICAgOlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiByZWY9e3NldFJlZn0+PC9zcGFuPlxyXG5cclxuICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIDwvUHJvZHVjdG8+XHJcblxyXG5cclxuXHJcbiAgICAgICAgPC8+XHJcbiAgICApXHJcbn1cclxuZXhwb3J0IGRlZmF1bHQgRGV0YWxsZXNQcm9kdWN0bzsiXX0= */",
  toString: _EMOTION_STRINGIFIED_CSS_ERROR__
});

var TextoDescripcion = Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_1__["default"])("p", {
  target: "e1s63vuv3",
  label: "TextoDescripcion"
})(false ? undefined : {
  name: "125lz0x",
  styles: "font-size:1.6rem;margin:0;color:#888;@media(max-width:450px){font-size:1.4;}",
  map: "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcQ2FtaWxvXFxEZXNrdG9wXFxjYW1pbG9cXHJlYWN0LWVzdHVkaW9cXHByeWVjdG9zLWRlLWp1YW5cXHByb2R1Y3RodW50bmV4dFxcY29tcG9uZW50c1xcbGF5b3V0c1xcRGV0YWxsZXNQcm9kdWN0by5qc3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBK0NpQyIsImZpbGUiOiJDOlxcVXNlcnNcXENhbWlsb1xcRGVza3RvcFxcY2FtaWxvXFxyZWFjdC1lc3R1ZGlvXFxwcnllY3Rvcy1kZS1qdWFuXFxwcm9kdWN0aHVudG5leHRcXGNvbXBvbmVudHNcXGxheW91dHNcXERldGFsbGVzUHJvZHVjdG8uanN4Iiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHN0eWxlZCBmcm9tICdAZW1vdGlvbi9zdHlsZWQnO1xyXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xyXG5pbXBvcnQgZm9ybWF0RGlzdGFuY2VUb05vdyBmcm9tICdkYXRlLWZucy9mb3JtYXREaXN0YW5jZVRvTm93JztcclxuaW1wb3J0IHsgZXMgfSBmcm9tICdkYXRlLWZucy9sb2NhbGUnO1xyXG5pbXBvcnQgTGluayBmcm9tICduZXh0L2xpbmsnO1xyXG5pbXBvcnQgdXNlT25TY3JlZW4gZnJvbSAnLi4vLi4vaG9va3MvdXNlT25TY3JlZW4nO1xyXG5cclxuY29uc3QgUHJvZHVjdG8gPSBzdHlsZWQubGlgXHJcbiAgICBAbWVkaWEgKG1heC13aWR0aDogNDAwcHgpe1xyXG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgICAgICBtYXJnaW46IDUwcHhcclxuICAgIH07XHJcbiAgICBAbWVkaWEgKG1pbi13aWR0aDogMTAwMHB4KXtcclxuICAgICAgICBwYWRkaW5nOiA0cmVtO1xyXG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xyXG4gICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICAgICAgYm9yZGVyOiAxcHggc29saWQgI2UxZTFlMTsgICBcclxuICAgIH1cclxuYDtcclxuXHJcbmNvbnN0IERlc2NyaXBjaW9uUHJvZHVjdG8gPSBzdHlsZWQuZGl2YFxyXG4gICAgZmxleDogMCAxIDYwMHB4O1xyXG4gICAgZGlzcGxheTogZ3JpZDtcclxuICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMWZyIDNmcjtcclxuICAgIGdhcDogMnJlbTtcclxuXHJcbiAgICBAbWVkaWEobWF4LXdpZHRoOjQ1MHB4KXtcclxuICAgICAgICBmbGV4OiA1IDUgMzAwcHg7XHJcbiAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAgfVxyXG5gO1xyXG5cclxuY29uc3QgVGl0dWxvID0gc3R5bGVkLmFgXHJcbiAgICBmb250LXNpemU6IDJyZW07XHJcbiAgICBmb250LXdlaWdodDogYm9sZDtcclxuICAgIG1hcmdpbjogMDtcclxuICAgICY6aG92ZXJ7XHJcbiAgICAgICAgY3Vyc29yOnBvaW50ZXI7XHJcbiAgICB9XHJcbiAgICBAbWVkaWEobWF4LXdpZHRoOjQ1MHB4KXtcclxuICAgICAgICBmb250LXNpemU6MS41cmVtO1xyXG4gICAgfVxyXG5gO1xyXG5cclxuY29uc3QgVGV4dG9EZXNjcmlwY2lvbiA9IHN0eWxlZC5wYFxyXG4gICAgZm9udC1zaXplOiAxLjZyZW07XHJcbiAgICBtYXJnaW46IDA7XHJcbiAgICBjb2xvcjogIzg4ODtcclxuICAgIEBtZWRpYShtYXgtd2lkdGg6NDUwcHgpe1xyXG4gICAgICAgIGZvbnQtc2l6ZToxLjRcclxuICAgIH1cclxuYDtcclxuXHJcbmNvbnN0IENvbWVudGFyaW9zID0gc3R5bGVkLmRpdmBcclxuICAgIG1hcmdpbi10b3A6IDJyZW07XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgIGRpdntcclxuICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICAgICAgYm9yZGVyOiAxcHggc29saWQgI2UxZTFlMTtcclxuICAgICAgICBwYWRkaW5nOiAuM3JlbSAxcmVtO1xyXG4gICAgICAgIG1hcmdpbi1yaWdodDogMnJlbTtcclxuICAgIH1cclxuICAgIGltZ3tcclxuICAgICAgICB3aWR0aDogMnJlbTtcclxuICAgICAgICBtYXJnaW4tcmlnaHQ6IDJyZW07XHJcbiAgICB9XHJcbiAgICBwe1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMS42cmVtO1xyXG4gICAgICAgIG1hcmdpbi1yaWdodDogMXJlbTtcclxuICAgICAgICBmb250LXdlaWdodDogNzAwO1xyXG4gICAgICAgICY6bGFzdC1vZi10eXBle1xyXG4gICAgICAgICAgICBtYXJnaW46IDA7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgQG1lZGlhKG1heC13aWR0aDo0NTBweCl7XHJcbiAgICAgICAgXHJcbiAgICB9XHJcbmA7XHJcblxyXG5jb25zdCBWb3RvcyA9IHN0eWxlZC5kaXZgXHJcbiAgICBmbGV4OiAwIDAgYXV0bztcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgIGJvcmRlcjogMXB4IHNvbGlkICNlMWUxZTE7XHJcbiAgICBwYWRkaW5nOiAxcmVtIDNyZW07XHJcbiAgICBkaXZ7XHJcbiAgICAgICAgZm9udC1zaXplOiAycmVtO1xyXG4gICAgfVxyXG4gICAgcHtcclxuICAgICAgICBtYXJnaW46IDA7XHJcbiAgICAgICAgZm9udC1zaXplOiAycmVtO1xyXG4gICAgICAgIGZvbnQtd2VpZ2h0OiA3MDA7XHJcbiAgICB9XHJcbiAgICBAbWVkaWEobWF4LXdpZHRoOjQ1MHB4KXtcclxuICAgICAgICBcclxuICAgIH1cclxuYDtcclxuXHJcbmNvbnN0IEltYWdlbiA9IHN0eWxlZC5pbWdgXHJcbiAgICB3aWR0aDogMjAwcHg7XHJcbiAgICBAbWVkaWEobWF4LXdpZHRoOiA0NTBweCl7XHJcbiAgICAgICAgd2lkdGg6NTAwcHg7XHJcbiAgICB9XHJcbiAgICBAbWVkaWEobWF4LXdpZHRoOjQ1MHB4KXtcclxuICAgICAgICBcclxuICAgIH1cclxuXHJcbmA7XHJcblxyXG5cclxuY29uc3QgRGV0YWxsZXNQcm9kdWN0byA9ICh7XHJcbiAgICBpZCxcclxuICAgIGNvbWVudGFyaW9zLFxyXG4gICAgY3JlYWRvLFxyXG4gICAgZGVzY3JpcGNpb24sXHJcbiAgICBlbXByZXNhLFxyXG4gICAgbm9tYnJlLFxyXG4gICAgdXJsLFxyXG4gICAgaW1hZ2VuVXJsLFxyXG4gICAgdm90b3NcclxufSkgPT4ge1xyXG4gICAgY29uc3QgW3NldFJlZiwgdmlzaWJsZV0gPSB1c2VPblNjcmVlbih7IHRocmVzaG9sZDogLjEgfSk7XHJcblxyXG4gICAgcmV0dXJuIChcclxuICAgICAgICA8PlxyXG5cclxuICAgICAgICAgICAgPFByb2R1Y3RvPlxyXG4gICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgIHZpc2libGUgPyAoXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDw+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8RGVzY3JpcGNpb25Qcm9kdWN0bz5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8SW1hZ2VuIHNyYz17aW1hZ2VuVXJsfSBhbHQ9XCJcIiAvPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHsvKiBwcm9kdWN0b3MgZXMgZWwgbm9icmUgZGUgbGEgY2FycGV0YSwgc2UgZGViZSBjcmVhciAqL31cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPExpbmsgaHJlZj1cIi9wcm9kdWN0b3MvW2lkXVwiIGFzPXtgL3Byb2R1Y3Rvcy8ke2lkfWB9ID5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxUaXR1bG8+e25vbWJyZX08L1RpdHVsbz5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9MaW5rPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8VGV4dG9EZXNjcmlwY2lvbj57ZGVzY3JpcGNpb24uc3Vic3RyKDAsIDEwMCkgKyAnLi4uJ308L1RleHRvRGVzY3JpcGNpb24+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxDb21lbnRhcmlvcz5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBzcmM9XCIvc3RhdGljL2ltZy9jb21lbnRhcmlvLnBuZ1wiIGFsdD1cImltZ1wiIC8+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHA+e2NvbWVudGFyaW9zLmxlbmd0aH0gQ29tZW50YXJpb3M8L3A+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9Db21lbnRhcmlvcz5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHA+UHVibGljYWRvIGhhY2U6IHtmb3JtYXREaXN0YW5jZVRvTm93KG5ldyBEYXRlKGNyZWFkbyksIHsgbG9jYWxlOiBlcyB9KX08L3A+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L0Rlc2NyaXBjaW9uUHJvZHVjdG8+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8Vm90b3M+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdj4mIzk2NTA7PC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHA+e3ZvdG9zfTwvcD5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvVm90b3M+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDwvPlxyXG4gICAgICAgICAgICAgICAgICAgIClcclxuICAgICAgICAgICAgICAgICAgICAgICAgOlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiByZWY9e3NldFJlZn0+PC9zcGFuPlxyXG5cclxuICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIDwvUHJvZHVjdG8+XHJcblxyXG5cclxuXHJcbiAgICAgICAgPC8+XHJcbiAgICApXHJcbn1cclxuZXhwb3J0IGRlZmF1bHQgRGV0YWxsZXNQcm9kdWN0bzsiXX0= */",
  toString: _EMOTION_STRINGIFIED_CSS_ERROR__
});

var Comentarios = Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_1__["default"])("div", {
  target: "e1s63vuv2",
  label: "Comentarios"
})(false ? undefined : {
  name: "1a06tas",
  styles: "margin-top:2rem;display:flex;align-items:center;div{display:flex;align-items:center;border:1px solid #e1e1e1;padding:.3rem 1rem;margin-right:2rem;}img{width:2rem;margin-right:2rem;}p{font-size:1.6rem;margin-right:1rem;font-weight:700;&:last-of-type{margin:0;}}@media(max-width:450px){}",
  map: "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcQ2FtaWxvXFxEZXNrdG9wXFxjYW1pbG9cXHJlYWN0LWVzdHVkaW9cXHByeWVjdG9zLWRlLWp1YW5cXHByb2R1Y3RodW50bmV4dFxcY29tcG9uZW50c1xcbGF5b3V0c1xcRGV0YWxsZXNQcm9kdWN0by5qc3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBd0Q4QiIsImZpbGUiOiJDOlxcVXNlcnNcXENhbWlsb1xcRGVza3RvcFxcY2FtaWxvXFxyZWFjdC1lc3R1ZGlvXFxwcnllY3Rvcy1kZS1qdWFuXFxwcm9kdWN0aHVudG5leHRcXGNvbXBvbmVudHNcXGxheW91dHNcXERldGFsbGVzUHJvZHVjdG8uanN4Iiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHN0eWxlZCBmcm9tICdAZW1vdGlvbi9zdHlsZWQnO1xyXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xyXG5pbXBvcnQgZm9ybWF0RGlzdGFuY2VUb05vdyBmcm9tICdkYXRlLWZucy9mb3JtYXREaXN0YW5jZVRvTm93JztcclxuaW1wb3J0IHsgZXMgfSBmcm9tICdkYXRlLWZucy9sb2NhbGUnO1xyXG5pbXBvcnQgTGluayBmcm9tICduZXh0L2xpbmsnO1xyXG5pbXBvcnQgdXNlT25TY3JlZW4gZnJvbSAnLi4vLi4vaG9va3MvdXNlT25TY3JlZW4nO1xyXG5cclxuY29uc3QgUHJvZHVjdG8gPSBzdHlsZWQubGlgXHJcbiAgICBAbWVkaWEgKG1heC13aWR0aDogNDAwcHgpe1xyXG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgICAgICBtYXJnaW46IDUwcHhcclxuICAgIH07XHJcbiAgICBAbWVkaWEgKG1pbi13aWR0aDogMTAwMHB4KXtcclxuICAgICAgICBwYWRkaW5nOiA0cmVtO1xyXG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xyXG4gICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICAgICAgYm9yZGVyOiAxcHggc29saWQgI2UxZTFlMTsgICBcclxuICAgIH1cclxuYDtcclxuXHJcbmNvbnN0IERlc2NyaXBjaW9uUHJvZHVjdG8gPSBzdHlsZWQuZGl2YFxyXG4gICAgZmxleDogMCAxIDYwMHB4O1xyXG4gICAgZGlzcGxheTogZ3JpZDtcclxuICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMWZyIDNmcjtcclxuICAgIGdhcDogMnJlbTtcclxuXHJcbiAgICBAbWVkaWEobWF4LXdpZHRoOjQ1MHB4KXtcclxuICAgICAgICBmbGV4OiA1IDUgMzAwcHg7XHJcbiAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAgfVxyXG5gO1xyXG5cclxuY29uc3QgVGl0dWxvID0gc3R5bGVkLmFgXHJcbiAgICBmb250LXNpemU6IDJyZW07XHJcbiAgICBmb250LXdlaWdodDogYm9sZDtcclxuICAgIG1hcmdpbjogMDtcclxuICAgICY6aG92ZXJ7XHJcbiAgICAgICAgY3Vyc29yOnBvaW50ZXI7XHJcbiAgICB9XHJcbiAgICBAbWVkaWEobWF4LXdpZHRoOjQ1MHB4KXtcclxuICAgICAgICBmb250LXNpemU6MS41cmVtO1xyXG4gICAgfVxyXG5gO1xyXG5cclxuY29uc3QgVGV4dG9EZXNjcmlwY2lvbiA9IHN0eWxlZC5wYFxyXG4gICAgZm9udC1zaXplOiAxLjZyZW07XHJcbiAgICBtYXJnaW46IDA7XHJcbiAgICBjb2xvcjogIzg4ODtcclxuICAgIEBtZWRpYShtYXgtd2lkdGg6NDUwcHgpe1xyXG4gICAgICAgIGZvbnQtc2l6ZToxLjRcclxuICAgIH1cclxuYDtcclxuXHJcbmNvbnN0IENvbWVudGFyaW9zID0gc3R5bGVkLmRpdmBcclxuICAgIG1hcmdpbi10b3A6IDJyZW07XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgIGRpdntcclxuICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICAgICAgYm9yZGVyOiAxcHggc29saWQgI2UxZTFlMTtcclxuICAgICAgICBwYWRkaW5nOiAuM3JlbSAxcmVtO1xyXG4gICAgICAgIG1hcmdpbi1yaWdodDogMnJlbTtcclxuICAgIH1cclxuICAgIGltZ3tcclxuICAgICAgICB3aWR0aDogMnJlbTtcclxuICAgICAgICBtYXJnaW4tcmlnaHQ6IDJyZW07XHJcbiAgICB9XHJcbiAgICBwe1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMS42cmVtO1xyXG4gICAgICAgIG1hcmdpbi1yaWdodDogMXJlbTtcclxuICAgICAgICBmb250LXdlaWdodDogNzAwO1xyXG4gICAgICAgICY6bGFzdC1vZi10eXBle1xyXG4gICAgICAgICAgICBtYXJnaW46IDA7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgQG1lZGlhKG1heC13aWR0aDo0NTBweCl7XHJcbiAgICAgICAgXHJcbiAgICB9XHJcbmA7XHJcblxyXG5jb25zdCBWb3RvcyA9IHN0eWxlZC5kaXZgXHJcbiAgICBmbGV4OiAwIDAgYXV0bztcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgIGJvcmRlcjogMXB4IHNvbGlkICNlMWUxZTE7XHJcbiAgICBwYWRkaW5nOiAxcmVtIDNyZW07XHJcbiAgICBkaXZ7XHJcbiAgICAgICAgZm9udC1zaXplOiAycmVtO1xyXG4gICAgfVxyXG4gICAgcHtcclxuICAgICAgICBtYXJnaW46IDA7XHJcbiAgICAgICAgZm9udC1zaXplOiAycmVtO1xyXG4gICAgICAgIGZvbnQtd2VpZ2h0OiA3MDA7XHJcbiAgICB9XHJcbiAgICBAbWVkaWEobWF4LXdpZHRoOjQ1MHB4KXtcclxuICAgICAgICBcclxuICAgIH1cclxuYDtcclxuXHJcbmNvbnN0IEltYWdlbiA9IHN0eWxlZC5pbWdgXHJcbiAgICB3aWR0aDogMjAwcHg7XHJcbiAgICBAbWVkaWEobWF4LXdpZHRoOiA0NTBweCl7XHJcbiAgICAgICAgd2lkdGg6NTAwcHg7XHJcbiAgICB9XHJcbiAgICBAbWVkaWEobWF4LXdpZHRoOjQ1MHB4KXtcclxuICAgICAgICBcclxuICAgIH1cclxuXHJcbmA7XHJcblxyXG5cclxuY29uc3QgRGV0YWxsZXNQcm9kdWN0byA9ICh7XHJcbiAgICBpZCxcclxuICAgIGNvbWVudGFyaW9zLFxyXG4gICAgY3JlYWRvLFxyXG4gICAgZGVzY3JpcGNpb24sXHJcbiAgICBlbXByZXNhLFxyXG4gICAgbm9tYnJlLFxyXG4gICAgdXJsLFxyXG4gICAgaW1hZ2VuVXJsLFxyXG4gICAgdm90b3NcclxufSkgPT4ge1xyXG4gICAgY29uc3QgW3NldFJlZiwgdmlzaWJsZV0gPSB1c2VPblNjcmVlbih7IHRocmVzaG9sZDogLjEgfSk7XHJcblxyXG4gICAgcmV0dXJuIChcclxuICAgICAgICA8PlxyXG5cclxuICAgICAgICAgICAgPFByb2R1Y3RvPlxyXG4gICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgIHZpc2libGUgPyAoXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDw+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8RGVzY3JpcGNpb25Qcm9kdWN0bz5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8SW1hZ2VuIHNyYz17aW1hZ2VuVXJsfSBhbHQ9XCJcIiAvPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHsvKiBwcm9kdWN0b3MgZXMgZWwgbm9icmUgZGUgbGEgY2FycGV0YSwgc2UgZGViZSBjcmVhciAqL31cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPExpbmsgaHJlZj1cIi9wcm9kdWN0b3MvW2lkXVwiIGFzPXtgL3Byb2R1Y3Rvcy8ke2lkfWB9ID5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxUaXR1bG8+e25vbWJyZX08L1RpdHVsbz5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9MaW5rPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8VGV4dG9EZXNjcmlwY2lvbj57ZGVzY3JpcGNpb24uc3Vic3RyKDAsIDEwMCkgKyAnLi4uJ308L1RleHRvRGVzY3JpcGNpb24+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxDb21lbnRhcmlvcz5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBzcmM9XCIvc3RhdGljL2ltZy9jb21lbnRhcmlvLnBuZ1wiIGFsdD1cImltZ1wiIC8+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHA+e2NvbWVudGFyaW9zLmxlbmd0aH0gQ29tZW50YXJpb3M8L3A+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9Db21lbnRhcmlvcz5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHA+UHVibGljYWRvIGhhY2U6IHtmb3JtYXREaXN0YW5jZVRvTm93KG5ldyBEYXRlKGNyZWFkbyksIHsgbG9jYWxlOiBlcyB9KX08L3A+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L0Rlc2NyaXBjaW9uUHJvZHVjdG8+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8Vm90b3M+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdj4mIzk2NTA7PC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHA+e3ZvdG9zfTwvcD5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvVm90b3M+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDwvPlxyXG4gICAgICAgICAgICAgICAgICAgIClcclxuICAgICAgICAgICAgICAgICAgICAgICAgOlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiByZWY9e3NldFJlZn0+PC9zcGFuPlxyXG5cclxuICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIDwvUHJvZHVjdG8+XHJcblxyXG5cclxuXHJcbiAgICAgICAgPC8+XHJcbiAgICApXHJcbn1cclxuZXhwb3J0IGRlZmF1bHQgRGV0YWxsZXNQcm9kdWN0bzsiXX0= */",
  toString: _EMOTION_STRINGIFIED_CSS_ERROR__
});

var Votos = Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_1__["default"])("div", {
  target: "e1s63vuv1",
  label: "Votos"
})(false ? undefined : {
  name: "mut4qb",
  styles: "flex:0 0 auto;text-align:center;border:1px solid #e1e1e1;padding:1rem 3rem;div{font-size:2rem;}p{margin:0;font-size:2rem;font-weight:700;}@media(max-width:450px){}",
  map: "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcQ2FtaWxvXFxEZXNrdG9wXFxjYW1pbG9cXHJlYWN0LWVzdHVkaW9cXHByeWVjdG9zLWRlLWp1YW5cXHByb2R1Y3RodW50bmV4dFxcY29tcG9uZW50c1xcbGF5b3V0c1xcRGV0YWxsZXNQcm9kdWN0by5qc3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBb0Z3QiIsImZpbGUiOiJDOlxcVXNlcnNcXENhbWlsb1xcRGVza3RvcFxcY2FtaWxvXFxyZWFjdC1lc3R1ZGlvXFxwcnllY3Rvcy1kZS1qdWFuXFxwcm9kdWN0aHVudG5leHRcXGNvbXBvbmVudHNcXGxheW91dHNcXERldGFsbGVzUHJvZHVjdG8uanN4Iiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHN0eWxlZCBmcm9tICdAZW1vdGlvbi9zdHlsZWQnO1xyXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xyXG5pbXBvcnQgZm9ybWF0RGlzdGFuY2VUb05vdyBmcm9tICdkYXRlLWZucy9mb3JtYXREaXN0YW5jZVRvTm93JztcclxuaW1wb3J0IHsgZXMgfSBmcm9tICdkYXRlLWZucy9sb2NhbGUnO1xyXG5pbXBvcnQgTGluayBmcm9tICduZXh0L2xpbmsnO1xyXG5pbXBvcnQgdXNlT25TY3JlZW4gZnJvbSAnLi4vLi4vaG9va3MvdXNlT25TY3JlZW4nO1xyXG5cclxuY29uc3QgUHJvZHVjdG8gPSBzdHlsZWQubGlgXHJcbiAgICBAbWVkaWEgKG1heC13aWR0aDogNDAwcHgpe1xyXG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgICAgICBtYXJnaW46IDUwcHhcclxuICAgIH07XHJcbiAgICBAbWVkaWEgKG1pbi13aWR0aDogMTAwMHB4KXtcclxuICAgICAgICBwYWRkaW5nOiA0cmVtO1xyXG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xyXG4gICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICAgICAgYm9yZGVyOiAxcHggc29saWQgI2UxZTFlMTsgICBcclxuICAgIH1cclxuYDtcclxuXHJcbmNvbnN0IERlc2NyaXBjaW9uUHJvZHVjdG8gPSBzdHlsZWQuZGl2YFxyXG4gICAgZmxleDogMCAxIDYwMHB4O1xyXG4gICAgZGlzcGxheTogZ3JpZDtcclxuICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMWZyIDNmcjtcclxuICAgIGdhcDogMnJlbTtcclxuXHJcbiAgICBAbWVkaWEobWF4LXdpZHRoOjQ1MHB4KXtcclxuICAgICAgICBmbGV4OiA1IDUgMzAwcHg7XHJcbiAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAgfVxyXG5gO1xyXG5cclxuY29uc3QgVGl0dWxvID0gc3R5bGVkLmFgXHJcbiAgICBmb250LXNpemU6IDJyZW07XHJcbiAgICBmb250LXdlaWdodDogYm9sZDtcclxuICAgIG1hcmdpbjogMDtcclxuICAgICY6aG92ZXJ7XHJcbiAgICAgICAgY3Vyc29yOnBvaW50ZXI7XHJcbiAgICB9XHJcbiAgICBAbWVkaWEobWF4LXdpZHRoOjQ1MHB4KXtcclxuICAgICAgICBmb250LXNpemU6MS41cmVtO1xyXG4gICAgfVxyXG5gO1xyXG5cclxuY29uc3QgVGV4dG9EZXNjcmlwY2lvbiA9IHN0eWxlZC5wYFxyXG4gICAgZm9udC1zaXplOiAxLjZyZW07XHJcbiAgICBtYXJnaW46IDA7XHJcbiAgICBjb2xvcjogIzg4ODtcclxuICAgIEBtZWRpYShtYXgtd2lkdGg6NDUwcHgpe1xyXG4gICAgICAgIGZvbnQtc2l6ZToxLjRcclxuICAgIH1cclxuYDtcclxuXHJcbmNvbnN0IENvbWVudGFyaW9zID0gc3R5bGVkLmRpdmBcclxuICAgIG1hcmdpbi10b3A6IDJyZW07XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgIGRpdntcclxuICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICAgICAgYm9yZGVyOiAxcHggc29saWQgI2UxZTFlMTtcclxuICAgICAgICBwYWRkaW5nOiAuM3JlbSAxcmVtO1xyXG4gICAgICAgIG1hcmdpbi1yaWdodDogMnJlbTtcclxuICAgIH1cclxuICAgIGltZ3tcclxuICAgICAgICB3aWR0aDogMnJlbTtcclxuICAgICAgICBtYXJnaW4tcmlnaHQ6IDJyZW07XHJcbiAgICB9XHJcbiAgICBwe1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMS42cmVtO1xyXG4gICAgICAgIG1hcmdpbi1yaWdodDogMXJlbTtcclxuICAgICAgICBmb250LXdlaWdodDogNzAwO1xyXG4gICAgICAgICY6bGFzdC1vZi10eXBle1xyXG4gICAgICAgICAgICBtYXJnaW46IDA7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgQG1lZGlhKG1heC13aWR0aDo0NTBweCl7XHJcbiAgICAgICAgXHJcbiAgICB9XHJcbmA7XHJcblxyXG5jb25zdCBWb3RvcyA9IHN0eWxlZC5kaXZgXHJcbiAgICBmbGV4OiAwIDAgYXV0bztcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgIGJvcmRlcjogMXB4IHNvbGlkICNlMWUxZTE7XHJcbiAgICBwYWRkaW5nOiAxcmVtIDNyZW07XHJcbiAgICBkaXZ7XHJcbiAgICAgICAgZm9udC1zaXplOiAycmVtO1xyXG4gICAgfVxyXG4gICAgcHtcclxuICAgICAgICBtYXJnaW46IDA7XHJcbiAgICAgICAgZm9udC1zaXplOiAycmVtO1xyXG4gICAgICAgIGZvbnQtd2VpZ2h0OiA3MDA7XHJcbiAgICB9XHJcbiAgICBAbWVkaWEobWF4LXdpZHRoOjQ1MHB4KXtcclxuICAgICAgICBcclxuICAgIH1cclxuYDtcclxuXHJcbmNvbnN0IEltYWdlbiA9IHN0eWxlZC5pbWdgXHJcbiAgICB3aWR0aDogMjAwcHg7XHJcbiAgICBAbWVkaWEobWF4LXdpZHRoOiA0NTBweCl7XHJcbiAgICAgICAgd2lkdGg6NTAwcHg7XHJcbiAgICB9XHJcbiAgICBAbWVkaWEobWF4LXdpZHRoOjQ1MHB4KXtcclxuICAgICAgICBcclxuICAgIH1cclxuXHJcbmA7XHJcblxyXG5cclxuY29uc3QgRGV0YWxsZXNQcm9kdWN0byA9ICh7XHJcbiAgICBpZCxcclxuICAgIGNvbWVudGFyaW9zLFxyXG4gICAgY3JlYWRvLFxyXG4gICAgZGVzY3JpcGNpb24sXHJcbiAgICBlbXByZXNhLFxyXG4gICAgbm9tYnJlLFxyXG4gICAgdXJsLFxyXG4gICAgaW1hZ2VuVXJsLFxyXG4gICAgdm90b3NcclxufSkgPT4ge1xyXG4gICAgY29uc3QgW3NldFJlZiwgdmlzaWJsZV0gPSB1c2VPblNjcmVlbih7IHRocmVzaG9sZDogLjEgfSk7XHJcblxyXG4gICAgcmV0dXJuIChcclxuICAgICAgICA8PlxyXG5cclxuICAgICAgICAgICAgPFByb2R1Y3RvPlxyXG4gICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgIHZpc2libGUgPyAoXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDw+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8RGVzY3JpcGNpb25Qcm9kdWN0bz5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8SW1hZ2VuIHNyYz17aW1hZ2VuVXJsfSBhbHQ9XCJcIiAvPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHsvKiBwcm9kdWN0b3MgZXMgZWwgbm9icmUgZGUgbGEgY2FycGV0YSwgc2UgZGViZSBjcmVhciAqL31cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPExpbmsgaHJlZj1cIi9wcm9kdWN0b3MvW2lkXVwiIGFzPXtgL3Byb2R1Y3Rvcy8ke2lkfWB9ID5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxUaXR1bG8+e25vbWJyZX08L1RpdHVsbz5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9MaW5rPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8VGV4dG9EZXNjcmlwY2lvbj57ZGVzY3JpcGNpb24uc3Vic3RyKDAsIDEwMCkgKyAnLi4uJ308L1RleHRvRGVzY3JpcGNpb24+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxDb21lbnRhcmlvcz5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBzcmM9XCIvc3RhdGljL2ltZy9jb21lbnRhcmlvLnBuZ1wiIGFsdD1cImltZ1wiIC8+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHA+e2NvbWVudGFyaW9zLmxlbmd0aH0gQ29tZW50YXJpb3M8L3A+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9Db21lbnRhcmlvcz5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHA+UHVibGljYWRvIGhhY2U6IHtmb3JtYXREaXN0YW5jZVRvTm93KG5ldyBEYXRlKGNyZWFkbyksIHsgbG9jYWxlOiBlcyB9KX08L3A+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L0Rlc2NyaXBjaW9uUHJvZHVjdG8+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8Vm90b3M+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdj4mIzk2NTA7PC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHA+e3ZvdG9zfTwvcD5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvVm90b3M+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDwvPlxyXG4gICAgICAgICAgICAgICAgICAgIClcclxuICAgICAgICAgICAgICAgICAgICAgICAgOlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiByZWY9e3NldFJlZn0+PC9zcGFuPlxyXG5cclxuICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIDwvUHJvZHVjdG8+XHJcblxyXG5cclxuXHJcbiAgICAgICAgPC8+XHJcbiAgICApXHJcbn1cclxuZXhwb3J0IGRlZmF1bHQgRGV0YWxsZXNQcm9kdWN0bzsiXX0= */",
  toString: _EMOTION_STRINGIFIED_CSS_ERROR__
});

var Imagen = Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_1__["default"])("img", {
  target: "e1s63vuv0",
  label: "Imagen"
})(false ? undefined : {
  name: "g6avc1",
  styles: "width:200px;@media(max-width: 450px){width:500px;}@media(max-width:450px){}",
  map: "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcQ2FtaWxvXFxEZXNrdG9wXFxjYW1pbG9cXHJlYWN0LWVzdHVkaW9cXHByeWVjdG9zLWRlLWp1YW5cXHByb2R1Y3RodW50bmV4dFxcY29tcG9uZW50c1xcbGF5b3V0c1xcRGV0YWxsZXNQcm9kdWN0by5qc3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBc0d5QiIsImZpbGUiOiJDOlxcVXNlcnNcXENhbWlsb1xcRGVza3RvcFxcY2FtaWxvXFxyZWFjdC1lc3R1ZGlvXFxwcnllY3Rvcy1kZS1qdWFuXFxwcm9kdWN0aHVudG5leHRcXGNvbXBvbmVudHNcXGxheW91dHNcXERldGFsbGVzUHJvZHVjdG8uanN4Iiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHN0eWxlZCBmcm9tICdAZW1vdGlvbi9zdHlsZWQnO1xyXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xyXG5pbXBvcnQgZm9ybWF0RGlzdGFuY2VUb05vdyBmcm9tICdkYXRlLWZucy9mb3JtYXREaXN0YW5jZVRvTm93JztcclxuaW1wb3J0IHsgZXMgfSBmcm9tICdkYXRlLWZucy9sb2NhbGUnO1xyXG5pbXBvcnQgTGluayBmcm9tICduZXh0L2xpbmsnO1xyXG5pbXBvcnQgdXNlT25TY3JlZW4gZnJvbSAnLi4vLi4vaG9va3MvdXNlT25TY3JlZW4nO1xyXG5cclxuY29uc3QgUHJvZHVjdG8gPSBzdHlsZWQubGlgXHJcbiAgICBAbWVkaWEgKG1heC13aWR0aDogNDAwcHgpe1xyXG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgICAgICBtYXJnaW46IDUwcHhcclxuICAgIH07XHJcbiAgICBAbWVkaWEgKG1pbi13aWR0aDogMTAwMHB4KXtcclxuICAgICAgICBwYWRkaW5nOiA0cmVtO1xyXG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xyXG4gICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICAgICAgYm9yZGVyOiAxcHggc29saWQgI2UxZTFlMTsgICBcclxuICAgIH1cclxuYDtcclxuXHJcbmNvbnN0IERlc2NyaXBjaW9uUHJvZHVjdG8gPSBzdHlsZWQuZGl2YFxyXG4gICAgZmxleDogMCAxIDYwMHB4O1xyXG4gICAgZGlzcGxheTogZ3JpZDtcclxuICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMWZyIDNmcjtcclxuICAgIGdhcDogMnJlbTtcclxuXHJcbiAgICBAbWVkaWEobWF4LXdpZHRoOjQ1MHB4KXtcclxuICAgICAgICBmbGV4OiA1IDUgMzAwcHg7XHJcbiAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAgfVxyXG5gO1xyXG5cclxuY29uc3QgVGl0dWxvID0gc3R5bGVkLmFgXHJcbiAgICBmb250LXNpemU6IDJyZW07XHJcbiAgICBmb250LXdlaWdodDogYm9sZDtcclxuICAgIG1hcmdpbjogMDtcclxuICAgICY6aG92ZXJ7XHJcbiAgICAgICAgY3Vyc29yOnBvaW50ZXI7XHJcbiAgICB9XHJcbiAgICBAbWVkaWEobWF4LXdpZHRoOjQ1MHB4KXtcclxuICAgICAgICBmb250LXNpemU6MS41cmVtO1xyXG4gICAgfVxyXG5gO1xyXG5cclxuY29uc3QgVGV4dG9EZXNjcmlwY2lvbiA9IHN0eWxlZC5wYFxyXG4gICAgZm9udC1zaXplOiAxLjZyZW07XHJcbiAgICBtYXJnaW46IDA7XHJcbiAgICBjb2xvcjogIzg4ODtcclxuICAgIEBtZWRpYShtYXgtd2lkdGg6NDUwcHgpe1xyXG4gICAgICAgIGZvbnQtc2l6ZToxLjRcclxuICAgIH1cclxuYDtcclxuXHJcbmNvbnN0IENvbWVudGFyaW9zID0gc3R5bGVkLmRpdmBcclxuICAgIG1hcmdpbi10b3A6IDJyZW07XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgIGRpdntcclxuICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICAgICAgYm9yZGVyOiAxcHggc29saWQgI2UxZTFlMTtcclxuICAgICAgICBwYWRkaW5nOiAuM3JlbSAxcmVtO1xyXG4gICAgICAgIG1hcmdpbi1yaWdodDogMnJlbTtcclxuICAgIH1cclxuICAgIGltZ3tcclxuICAgICAgICB3aWR0aDogMnJlbTtcclxuICAgICAgICBtYXJnaW4tcmlnaHQ6IDJyZW07XHJcbiAgICB9XHJcbiAgICBwe1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMS42cmVtO1xyXG4gICAgICAgIG1hcmdpbi1yaWdodDogMXJlbTtcclxuICAgICAgICBmb250LXdlaWdodDogNzAwO1xyXG4gICAgICAgICY6bGFzdC1vZi10eXBle1xyXG4gICAgICAgICAgICBtYXJnaW46IDA7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgQG1lZGlhKG1heC13aWR0aDo0NTBweCl7XHJcbiAgICAgICAgXHJcbiAgICB9XHJcbmA7XHJcblxyXG5jb25zdCBWb3RvcyA9IHN0eWxlZC5kaXZgXHJcbiAgICBmbGV4OiAwIDAgYXV0bztcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgIGJvcmRlcjogMXB4IHNvbGlkICNlMWUxZTE7XHJcbiAgICBwYWRkaW5nOiAxcmVtIDNyZW07XHJcbiAgICBkaXZ7XHJcbiAgICAgICAgZm9udC1zaXplOiAycmVtO1xyXG4gICAgfVxyXG4gICAgcHtcclxuICAgICAgICBtYXJnaW46IDA7XHJcbiAgICAgICAgZm9udC1zaXplOiAycmVtO1xyXG4gICAgICAgIGZvbnQtd2VpZ2h0OiA3MDA7XHJcbiAgICB9XHJcbiAgICBAbWVkaWEobWF4LXdpZHRoOjQ1MHB4KXtcclxuICAgICAgICBcclxuICAgIH1cclxuYDtcclxuXHJcbmNvbnN0IEltYWdlbiA9IHN0eWxlZC5pbWdgXHJcbiAgICB3aWR0aDogMjAwcHg7XHJcbiAgICBAbWVkaWEobWF4LXdpZHRoOiA0NTBweCl7XHJcbiAgICAgICAgd2lkdGg6NTAwcHg7XHJcbiAgICB9XHJcbiAgICBAbWVkaWEobWF4LXdpZHRoOjQ1MHB4KXtcclxuICAgICAgICBcclxuICAgIH1cclxuXHJcbmA7XHJcblxyXG5cclxuY29uc3QgRGV0YWxsZXNQcm9kdWN0byA9ICh7XHJcbiAgICBpZCxcclxuICAgIGNvbWVudGFyaW9zLFxyXG4gICAgY3JlYWRvLFxyXG4gICAgZGVzY3JpcGNpb24sXHJcbiAgICBlbXByZXNhLFxyXG4gICAgbm9tYnJlLFxyXG4gICAgdXJsLFxyXG4gICAgaW1hZ2VuVXJsLFxyXG4gICAgdm90b3NcclxufSkgPT4ge1xyXG4gICAgY29uc3QgW3NldFJlZiwgdmlzaWJsZV0gPSB1c2VPblNjcmVlbih7IHRocmVzaG9sZDogLjEgfSk7XHJcblxyXG4gICAgcmV0dXJuIChcclxuICAgICAgICA8PlxyXG5cclxuICAgICAgICAgICAgPFByb2R1Y3RvPlxyXG4gICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgIHZpc2libGUgPyAoXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDw+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8RGVzY3JpcGNpb25Qcm9kdWN0bz5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8SW1hZ2VuIHNyYz17aW1hZ2VuVXJsfSBhbHQ9XCJcIiAvPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHsvKiBwcm9kdWN0b3MgZXMgZWwgbm9icmUgZGUgbGEgY2FycGV0YSwgc2UgZGViZSBjcmVhciAqL31cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPExpbmsgaHJlZj1cIi9wcm9kdWN0b3MvW2lkXVwiIGFzPXtgL3Byb2R1Y3Rvcy8ke2lkfWB9ID5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxUaXR1bG8+e25vbWJyZX08L1RpdHVsbz5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9MaW5rPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8VGV4dG9EZXNjcmlwY2lvbj57ZGVzY3JpcGNpb24uc3Vic3RyKDAsIDEwMCkgKyAnLi4uJ308L1RleHRvRGVzY3JpcGNpb24+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxDb21lbnRhcmlvcz5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBzcmM9XCIvc3RhdGljL2ltZy9jb21lbnRhcmlvLnBuZ1wiIGFsdD1cImltZ1wiIC8+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHA+e2NvbWVudGFyaW9zLmxlbmd0aH0gQ29tZW50YXJpb3M8L3A+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9Db21lbnRhcmlvcz5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHA+UHVibGljYWRvIGhhY2U6IHtmb3JtYXREaXN0YW5jZVRvTm93KG5ldyBEYXRlKGNyZWFkbyksIHsgbG9jYWxlOiBlcyB9KX08L3A+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L0Rlc2NyaXBjaW9uUHJvZHVjdG8+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8Vm90b3M+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdj4mIzk2NTA7PC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHA+e3ZvdG9zfTwvcD5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvVm90b3M+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDwvPlxyXG4gICAgICAgICAgICAgICAgICAgIClcclxuICAgICAgICAgICAgICAgICAgICAgICAgOlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiByZWY9e3NldFJlZn0+PC9zcGFuPlxyXG5cclxuICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIDwvUHJvZHVjdG8+XHJcblxyXG5cclxuXHJcbiAgICAgICAgPC8+XHJcbiAgICApXHJcbn1cclxuZXhwb3J0IGRlZmF1bHQgRGV0YWxsZXNQcm9kdWN0bzsiXX0= */",
  toString: _EMOTION_STRINGIFIED_CSS_ERROR__
});

var DetallesProducto = function DetallesProducto(_ref) {
  _s();

  var id = _ref.id,
      comentarios = _ref.comentarios,
      creado = _ref.creado,
      descripcion = _ref.descripcion,
      empresa = _ref.empresa,
      nombre = _ref.nombre,
      url = _ref.url,
      imagenUrl = _ref.imagenUrl,
      votos = _ref.votos;

  var _useOnScreen = Object(_hooks_useOnScreen__WEBPACK_IMPORTED_MODULE_6__["default"])({
    threshold: .1
  }),
      _useOnScreen2 = Object(C_Users_Camilo_Desktop_camilo_react_estudio_pryectos_de_juan_producthuntnext_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__["default"])(_useOnScreen, 2),
      setRef = _useOnScreen2[0],
      visible = _useOnScreen2[1];

  return Object(_emotion_react__WEBPACK_IMPORTED_MODULE_7__["jsx"])(react__WEBPACK_IMPORTED_MODULE_2___default.a.Fragment, null, Object(_emotion_react__WEBPACK_IMPORTED_MODULE_7__["jsx"])(Producto, {
    __self: _this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 131,
      columnNumber: 13
    }
  }, visible ? Object(_emotion_react__WEBPACK_IMPORTED_MODULE_7__["jsx"])(react__WEBPACK_IMPORTED_MODULE_2___default.a.Fragment, null, Object(_emotion_react__WEBPACK_IMPORTED_MODULE_7__["jsx"])(DescripcionProducto, {
    __self: _this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 135,
      columnNumber: 29
    }
  }, Object(_emotion_react__WEBPACK_IMPORTED_MODULE_7__["jsx"])("div", {
    __self: _this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 136,
      columnNumber: 33
    }
  }, Object(_emotion_react__WEBPACK_IMPORTED_MODULE_7__["jsx"])(Imagen, {
    src: imagenUrl,
    alt: "",
    __self: _this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 137,
      columnNumber: 37
    }
  })), Object(_emotion_react__WEBPACK_IMPORTED_MODULE_7__["jsx"])("div", {
    __self: _this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 139,
      columnNumber: 33
    }
  }, Object(_emotion_react__WEBPACK_IMPORTED_MODULE_7__["jsx"])(next_link__WEBPACK_IMPORTED_MODULE_5___default.a, {
    href: "/productos/[id]",
    as: "/productos/".concat(id),
    __self: _this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 141,
      columnNumber: 37
    }
  }, Object(_emotion_react__WEBPACK_IMPORTED_MODULE_7__["jsx"])(Titulo, {
    __self: _this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 142,
      columnNumber: 41
    }
  }, nombre)), Object(_emotion_react__WEBPACK_IMPORTED_MODULE_7__["jsx"])(TextoDescripcion, {
    __self: _this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 144,
      columnNumber: 37
    }
  }, descripcion.substr(0, 100) + '...'), Object(_emotion_react__WEBPACK_IMPORTED_MODULE_7__["jsx"])(Comentarios, {
    __self: _this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 145,
      columnNumber: 37
    }
  }, Object(_emotion_react__WEBPACK_IMPORTED_MODULE_7__["jsx"])("div", {
    __self: _this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 146,
      columnNumber: 41
    }
  }, Object(_emotion_react__WEBPACK_IMPORTED_MODULE_7__["jsx"])("img", {
    src: "/static/img/comentario.png",
    alt: "img",
    __self: _this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 147,
      columnNumber: 45
    }
  }), Object(_emotion_react__WEBPACK_IMPORTED_MODULE_7__["jsx"])("p", {
    __self: _this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 148,
      columnNumber: 45
    }
  }, comentarios.length, " Comentarios"))), Object(_emotion_react__WEBPACK_IMPORTED_MODULE_7__["jsx"])("p", {
    __self: _this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 151,
      columnNumber: 37
    }
  }, "Publicado hace: ", date_fns_formatDistanceToNow__WEBPACK_IMPORTED_MODULE_3___default()(new Date(creado), {
    locale: date_fns_locale__WEBPACK_IMPORTED_MODULE_4__["es"]
  })))), Object(_emotion_react__WEBPACK_IMPORTED_MODULE_7__["jsx"])(Votos, {
    __self: _this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 154,
      columnNumber: 29
    }
  }, Object(_emotion_react__WEBPACK_IMPORTED_MODULE_7__["jsx"])("div", {
    __self: _this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 155,
      columnNumber: 33
    }
  }, "\u25B2"), Object(_emotion_react__WEBPACK_IMPORTED_MODULE_7__["jsx"])("p", {
    __self: _this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 156,
      columnNumber: 33
    }
  }, votos))) : Object(_emotion_react__WEBPACK_IMPORTED_MODULE_7__["jsx"])("span", {
    ref: setRef,
    __self: _this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 161,
      columnNumber: 25
    }
  })));
};

_s(DetallesProducto, "+kAhwHHyYZ2zsSmfe7SN3+uAibI=", false, function () {
  return [_hooks_useOnScreen__WEBPACK_IMPORTED_MODULE_6__["default"]];
});

_c = DetallesProducto;
/* harmony default export */ __webpack_exports__["default"] = (DetallesProducto);

var _c;

$RefreshReg$(_c, "DetallesProducto");

;
    var _a, _b;
    // Legacy CSS implementations will `eval` browser code in a Node.js context
    // to extract CSS. For backwards compatibility, we need to check we're in a
    // browser context before continuing.
    if (typeof self !== 'undefined' &&
        // AMP / No-JS mode does not inject these helpers:
        '$RefreshHelpers$' in self) {
        var currentExports = module.__proto__.exports;
        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;
        // This cannot happen in MainTemplate because the exports mismatch between
        // templating and execution.
        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.i);
        // A module can be accepted automatically based on its exports, e.g. when
        // it is a Refresh Boundary.
        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {
            // Save the previous exports on update so we can compare the boundary
            // signatures.
            module.hot.dispose(function (data) {
                data.prevExports = currentExports;
            });
            // Unconditionally accept an update to this module, we'll check if it's
            // still a Refresh Boundary later.
            module.hot.accept();
            // This field is set when the previous version of this module was a
            // Refresh Boundary, letting us know we need to check for invalidation or
            // enqueue an update.
            if (prevExports !== null) {
                // A boundary can become ineligible if its exports are incompatible
                // with the previous exports.
                //
                // For example, if you add/remove/change exports, we'll want to
                // re-execute the importing modules, and force those components to
                // re-render. Similarly, if you convert a class component to a
                // function, we want to invalidate the boundary.
                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {
                    module.hot.invalidate();
                }
                else {
                    self.$RefreshHelpers$.scheduleUpdate();
                }
            }
        }
        else {
            // Since we just executed the code for the module, it's possible that the
            // new exports made it ineligible for being a boundary.
            // We only care about the case when we were _previously_ a boundary,
            // because we already accepted this update (accidental side effect).
            var isNoLongerABoundary = prevExports !== null;
            if (isNoLongerABoundary) {
                module.hot.invalidate();
            }
        }
    }

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../node_modules/next/dist/compiled/webpack/harmony-module.js */ "./node_modules/next/dist/compiled/webpack/harmony-module.js")(module)))

/***/ })

})
//# sourceMappingURL=data:application/json;charset=utf-8;base64,