webpackHotUpdate_N_E("pages/productos/[id]",{

/***/ "./pages/productos/[id].jsx":
/*!**********************************!*\
  !*** ./pages/productos/[id].jsx ***!
  \**********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* WEBPACK VAR INJECTION */(function(module) {/* harmony import */ var C_Users_lokom_Desktop_camilo_react_estudio_pryectos_de_juan_producthuntnext_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/defineProperty */ "./node_modules/@babel/runtime/helpers/esm/defineProperty.js");
/* harmony import */ var C_Users_lokom_Desktop_camilo_react_estudio_pryectos_de_juan_producthuntnext_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/toConsumableArray */ "./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js");
/* harmony import */ var C_Users_lokom_Desktop_camilo_react_estudio_pryectos_de_juan_producthuntnext_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node_modules/@babel/runtime/regenerator */ "./node_modules/@babel/runtime/regenerator/index.js");
/* harmony import */ var C_Users_lokom_Desktop_camilo_react_estudio_pryectos_de_juan_producthuntnext_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(C_Users_lokom_Desktop_camilo_react_estudio_pryectos_de_juan_producthuntnext_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var C_Users_lokom_Desktop_camilo_react_estudio_pryectos_de_juan_producthuntnext_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/asyncToGenerator */ "./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js");
/* harmony import */ var _emotion_styled_base__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @emotion/styled/base */ "./node_modules/@emotion/styled/base/dist/emotion-styled-base.browser.esm.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! next/router */ "./node_modules/next/router.js");
/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(next_router__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var _firebase__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../firebase */ "./firebase/index.jsx");
/* harmony import */ var _components_layouts_404__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../components/layouts/404 */ "./components/layouts/404.jsx");
/* harmony import */ var _components_layouts_Layout__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../components/layouts/Layout */ "./components/layouts/Layout.jsx");
/* harmony import */ var _emotion_react__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @emotion/react */ "./node_modules/@emotion/react/dist/emotion-react.browser.esm.js");
/* harmony import */ var date_fns_formatDistanceToNow__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! date-fns/formatDistanceToNow */ "./node_modules/date-fns/formatDistanceToNow/index.js");
/* harmony import */ var date_fns_formatDistanceToNow__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(date_fns_formatDistanceToNow__WEBPACK_IMPORTED_MODULE_11__);
/* harmony import */ var date_fns_locale__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! date-fns/locale */ "./node_modules/date-fns/locale/index.js");
/* harmony import */ var date_fns_locale__WEBPACK_IMPORTED_MODULE_12___default = /*#__PURE__*/__webpack_require__.n(date_fns_locale__WEBPACK_IMPORTED_MODULE_12__);
/* harmony import */ var _components_ui_Formulario__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../components/ui/Formulario */ "./components/ui/Formulario.jsx");
/* harmony import */ var _components_ui_Boton__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../../components/ui/Boton */ "./components/ui/Boton.jsx");
/* harmony import */ var react_is_mounted_hook__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! react-is-mounted-hook */ "./node_modules/react-is-mounted-hook/lib/index.js");
/* harmony import */ var react_is_mounted_hook__WEBPACK_IMPORTED_MODULE_15___default = /*#__PURE__*/__webpack_require__.n(react_is_mounted_hook__WEBPACK_IMPORTED_MODULE_15__);






var _jsxFileName = "C:\\Users\\lokom\\Desktop\\camilo\\react-estudio\\pryectos-de-juan\\producthuntnext\\pages\\productos\\[id].jsx",
    _this = undefined,
    _s = $RefreshSig$();

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { Object(C_Users_lokom_Desktop_camilo_react_estudio_pryectos_de_juan_producthuntnext_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__["default"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _EMOTION_STRINGIFIED_CSS_ERROR__() { return "You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop)."; }














var ContenedorProducto = Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_4__["default"])("div", {
  target: "e1s4jho61",
  label: "ContenedorProducto"
})(false ? undefined : {
  name: "bkbgmm",
  styles: "@media(min-width: 768px){display:grid;grid-template-columns:2fr 1fr;gap:2rem;}",
  map: "/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */",
  toString: _EMOTION_STRINGIFIED_CSS_ERROR__
});

var CreadorProducto = Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_4__["default"])("p", {
  target: "e1s4jho60",
  label: "CreadorProducto"
})(false ? undefined : {
  name: "1ptknkn",
  styles: "padding:.5rem 2rem;background-color:#DA552F;color:#fff;text-transform:uppercase;font-weight:bold;display:inline-block;text-align:center",
  map: "/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */",
  toString: _EMOTION_STRINGIFIED_CSS_ERROR__
});

var _ref = false ? undefined : {
  name: "mg11bp-Producto",
  styles: "text-align:center;label:Producto;",
  map: "/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */",
  toString: _EMOTION_STRINGIFIED_CSS_ERROR__
};

var _ref2 = false ? undefined : {
  name: "1svusuj-Producto",
  styles: "margin-top:5rem;label:Producto;",
  map: "/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */",
  toString: _EMOTION_STRINGIFIED_CSS_ERROR__
};

var _ref3 = false ? undefined : {
  name: "1mjosc0-Producto",
  styles: "font-weight:bold;label:Producto;",
  map: "/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */",
  toString: _EMOTION_STRINGIFIED_CSS_ERROR__
};

var _ref4 = false ? undefined : {
  name: "3z50ka-Producto",
  styles: "border:1px solid #e1e1e1;padding:2rem;label:Producto;",
  map: "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcbG9rb21cXERlc2t0b3BcXGNhbWlsb1xccmVhY3QtZXN0dWRpb1xccHJ5ZWN0b3MtZGUtanVhblxccHJvZHVjdGh1bnRuZXh0XFxwYWdlc1xccHJvZHVjdG9zXFxbaWRdLmpzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFvT29FIiwiZmlsZSI6IkM6XFxVc2Vyc1xcbG9rb21cXERlc2t0b3BcXGNhbWlsb1xccmVhY3QtZXN0dWRpb1xccHJ5ZWN0b3MtZGUtanVhblxccHJvZHVjdGh1bnRuZXh0XFxwYWdlc1xccHJvZHVjdG9zXFxbaWRdLmpzeCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCwgeyB1c2VDb250ZXh0LCB1c2VFZmZlY3QsIHVzZVJlZiwgdXNlU3RhdGUgfSBmcm9tICdyZWFjdCdcclxuaW1wb3J0IHsgdXNlUm91dGVyIH0gZnJvbSAnbmV4dC9yb3V0ZXInXHJcbmltcG9ydCB7IEZpcmViYXNlQ29udGV4dCB9IGZyb20gJy4uLy4uL2ZpcmViYXNlJztcclxuaW1wb3J0IEVycm9yNDA0IGZyb20gJy4uLy4uL2NvbXBvbmVudHMvbGF5b3V0cy80MDQnO1xyXG5pbXBvcnQgTGF5b3V0IGZyb20gJy4uLy4uL2NvbXBvbmVudHMvbGF5b3V0cy9MYXlvdXQnO1xyXG5pbXBvcnQgeyBjc3MgfSBmcm9tICdAZW1vdGlvbi9yZWFjdCc7XHJcbmltcG9ydCBzdHlsZWQgZnJvbSAnQGVtb3Rpb24vc3R5bGVkJztcclxuaW1wb3J0IGZvcm1hdERpc3RhbmNlVG9Ob3cgZnJvbSAnZGF0ZS1mbnMvZm9ybWF0RGlzdGFuY2VUb05vdyc7XHJcbmltcG9ydCB7IGVzIH0gZnJvbSAnZGF0ZS1mbnMvbG9jYWxlJztcclxuaW1wb3J0IHsgQ2FtcG8sIElucHV0U3VibWl0IH0gZnJvbSAnLi4vLi4vY29tcG9uZW50cy91aS9Gb3JtdWxhcmlvJztcclxuaW1wb3J0IEJvdG9uIGZyb20gJy4uLy4uL2NvbXBvbmVudHMvdWkvQm90b24nO1xyXG5pbXBvcnQgdXNlSXNNb3VudGVkIGZyb20gJ3JlYWN0LWlzLW1vdW50ZWQtaG9vayc7XHJcblxyXG5jb25zdCBDb250ZW5lZG9yUHJvZHVjdG8gPSBzdHlsZWQuZGl2YFxyXG4gICAgQG1lZGlhKG1pbi13aWR0aDogNzY4cHgpe1xyXG4gICAgICAgIGRpc3BsYXk6IGdyaWQ7XHJcbiAgICAgICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiAyZnIgMWZyO1xyXG4gICAgICAgIGdhcDogMnJlbTtcclxuICAgIH1cclxuYDtcclxuXHJcbmNvbnN0IENyZWFkb3JQcm9kdWN0byA9IHN0eWxlZC5wYFxyXG4gICAgcGFkZGluZzogLjVyZW0gMnJlbTtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICNEQTU1MkY7XHJcbiAgICBjb2xvcjogI2ZmZjtcclxuICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XHJcbiAgICBmb250LXdlaWdodDogYm9sZDtcclxuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuYDtcclxuXHJcbmNvbnN0IFByb2R1Y3RvID0gKCkgPT4ge1xyXG4gICAgLy9yb3V0aW5nIHBhcmEgb2J0ZW5lciBlbCBpZCBhY3R1YWxcclxuICAgIGNvbnN0IHJvdXRlciA9IHVzZVJvdXRlcigpO1xyXG4gICAgY29uc3QgeyBxdWVyeTogeyBpZCB9IH0gPSByb3V0ZXI7XHJcbiAgICBjb25zdCB7IGZpcmViYXNlLCB1c3VhcmlvIH0gPSB1c2VDb250ZXh0KEZpcmViYXNlQ29udGV4dCk7XHJcblxyXG4gICAgY29uc3QgW3Byb2R1Y3RvLCBzZXRQcm9kdWN0b10gPSB1c2VTdGF0ZSh7fSk7XHJcbiAgICBjb25zdCBbZXJyb3IsIHNldEVycm9yXSA9IHVzZVN0YXRlKGZhbHNlKTtcclxuICAgIGNvbnN0IFtjb21lbnRhcmlvLCBzZXRDb21lbnRhcmlvXSA9IHVzZVN0YXRlKHt9KTtcclxuICAgIGNvbnN0IFtjb25zdWx0YXJEQiwgc2V0Q29uc3VsdGFyREJdID0gdXNlU3RhdGUodHJ1ZSk7XHJcblxyXG4gICAgLy8gY29uc3QgaXNNb3VudGVkID0gdXNlUmVmKHRydWUpO1xyXG4gICAgY29uc3QgaXNNb3VudGVkID0gdXNlSXNNb3VudGVkKCk7XHJcblxyXG4gICAgY29uc3QgeyBjb21lbnRhcmlvcywgY3JlYWRvLCBkZXNjcmlwY2lvbiwgZW1wcmVzYSwgbm9tYnJlLCB1cmwsIGltYWdlblVybCwgdm90b3MsIGNyZWFkb3IsIGhhVm90YWRvLGltYWdlUGF0aCB9ID0gcHJvZHVjdG87XHJcbiAgICB1c2VFZmZlY3QoKCkgPT4ge1xyXG5cclxuICAgICAgICBpZiAoaWQgJiYgY29uc3VsdGFyREIgJiYgaXNNb3VudGVkKSB7XHJcblxyXG4gICAgICAgICAgICBjb25zdCBvYnRlbmVyUHJvZHVjdG8gPSBhc3luYyAoKSA9PiB7XHJcblxyXG4gICAgICAgICAgICAgICAgY29uc3QgcmVzID0gYXdhaXQgZmlyZWJhc2UuZGIuY29sbGVjdGlvbigncHJvZHVjdG9zJykuZG9jKGlkKTtcclxuICAgICAgICAgICAgICAgIGNvbnN0IHByb2R1Y3RvID0gYXdhaXQgcmVzLmdldCgpO1xyXG4gICAgICAgICAgICAgICAgaWYgKHByb2R1Y3RvLmV4aXN0cyB8fCBpc01vdW50ZWQoKSkge1xyXG4gICAgICAgICAgICAgICAgICAgIHNldFByb2R1Y3RvKHByb2R1Y3RvLmRhdGEoKSk7XHJcbiAgICAgICAgICAgICAgICAgICAgc2V0Q29uc3VsdGFyREIoZmFsc2UpO1xyXG4gICAgICAgICAgICAgICAgICAgIHNldEVycm9yKGZhbHNlKTtcclxuICAgICAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgc2V0Q29uc3VsdGFyREIoZmFsc2UpO1xyXG4gICAgICAgICAgICAgICAgICAgIHNldEVycm9yKHRydWUpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIG9idGVuZXJQcm9kdWN0bygpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpc01vdW50ZWQoZmFsc2UpXHJcbiAgICAgICAgLy8gcmV0dXJuICgpID0+IHtcclxuICAgICAgICAgICAgLy8gICAgICAgICAgICAgaXNNb3VudGVkLmN1cnJlbnQgPSBmYWxzZTtcclxuICAgICAgICAgICAgLy8gICAgICAgICB9XHJcbiAgICAgICAgfSwgW2lkLHByb2R1Y3RvLGlzTW91bnRlZF0pXHJcbiAgICAgICAgXHJcbiAgICAgICAgaWYgKE9iamVjdC5rZXlzKHByb2R1Y3RvKS5sZW5ndGggPT09IDAgJiYgIWVycm9yKSByZXR1cm4gJ0NhcmdhbmRvLi4uJztcclxuICAgICAgICBcclxuICAgICAgICAvL0FkbWluaXN0cmFyIHkgdmFsaWRhIGxvcyB2b3Rvc1xyXG4gICAgICAgIGNvbnN0IHZvdGFyUHJvZHVjdG8gPSAoKSA9PiB7XHJcbiAgICAgICAgICAgIGlmICghdXN1YXJpbykge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIHJvdXRlci5wdXNoKCcvbG9naW4nKVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIFxyXG4gICAgICAgICAgICBcclxuICAgICAgICAgICAgLy9WZXJpZmljYXIgc2kgdXN1YXJpbyBhY3R1YWwgaGEgdm90YWRvXHJcbiAgICAgICAgICAgIGlmIChoYVZvdGFkbz8uaW5jbHVkZXModXN1YXJpby51aWQpKSByZXR1cm47XHJcbiAgICAgICAgXHJcblxyXG4gICAgICAgIC8vb2J0ZW5lciB5IHN1bWFyIHVuIG51ZXZvIHZvdG9cclxuICAgICAgICBjb25zdCBudWV2b1RvdGFsID0gdm90b3MgKyAxO1xyXG5cclxuICAgICAgICAvL2d1YXJkYXIgZWwgaWQgZGVsIHVzdWFyaW8gcXVlIGggdm90YWRvXHJcbiAgICAgICAgY29uc3QgbnVldm9IYVZvdGFkbyA9IFsuLi5oYVZvdGFkbywgdXN1YXJpby51aWRdXHJcblxyXG4gICAgICAgIC8vYWN0dWFsaXphciBlbiBsYSBiZGRcclxuICAgICAgICBmaXJlYmFzZS5kYi5jb2xsZWN0aW9uKCdwcm9kdWN0b3MnKS5kb2MoaWQpLnVwZGF0ZSh7XHJcbiAgICAgICAgICAgIHZvdG9zOiBudWV2b1RvdGFsLFxyXG4gICAgICAgICAgICBoYVZvdGFkbzogbnVldm9IYVZvdGFkb1xyXG4gICAgICAgIH0pO1xyXG5cclxuICAgICAgICAvL0FjdHVhbGl6YXIgZWwgc3RhdGVcclxuICAgICAgICBzZXRQcm9kdWN0byh7XHJcbiAgICAgICAgICAgIC4uLnByb2R1Y3RvLFxyXG4gICAgICAgICAgICB2b3RvczogbnVldm9Ub3RhbFxyXG4gICAgICAgIH0pXHJcbiAgICAgICAgc2V0Q29uc3VsdGFyREIodHJ1ZSk7IC8vaGF5IHVuIHZvbyBwb3IgbG8gdGFudG8gY29uc3VsdGFyIGEgbGEgQkREXHJcbiAgICB9XHJcbiAgICAvL2Z1bmNpb24gcGFyYSBzYWJlciBzaSB5YSBoYSBjb21lbnRhZG8gZWwgdXN1YXJpb1xyXG4gICAgY29uc3QgaGFWb3RhZG9SZXMgPSAoaWQpID0+IHtcclxuICAgICAgICByZXR1cm4gaGFWb3RhZG8uc29tZSh2b3RvID0+IHZvdG8gPT09IGlkKVxyXG4gICAgfVxyXG5cclxuICAgIC8vZnVuY2lvbmVzIHBhcmEgY3JlYXIgY29tZW50YXJpb3NcclxuICAgIGNvbnN0IGNvbWVudGFyaW9DaGFuZ2UgPSBlID0+IHtcclxuICAgICAgICBzZXRDb21lbnRhcmlvKHtcclxuICAgICAgICAgICAgLi4uY29tZW50YXJpbyxcclxuICAgICAgICAgICAgW2UudGFyZ2V0Lm5hbWVdOiBlLnRhcmdldC52YWx1ZVxyXG4gICAgICAgIH0pXHJcbiAgICB9XHJcblxyXG4gICAgY29uc3QgZXNDcmVhZG9yID0gaWQgPT4ge1xyXG4gICAgICAgIGlmIChjcmVhZG9yLmlkID09PSBpZCkge1xyXG4gICAgICAgICAgICByZXR1cm4gdHJ1ZTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgY29uc3QgaGFuZGxlU3VibWl0Q29tZW50YXJpbyA9IGUgPT4ge1xyXG4gICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcclxuICAgICAgICBpZiAoIXVzdWFyaW8pIHtcclxuICAgICAgICAgICAgcmV0dXJuIHJvdXRlci5wdXNoKCcvbG9naW4nKVxyXG4gICAgICAgIH1cclxuICAgICAgICBpZihjb21lbnRhcmlvLm1lbnNhamUudHJpbSgpID09PScnKSByZXR1cm47XHJcbiAgICAgICAgLy9pbmZvIGV4dHJhIGFsIGNvbWVudGFyaW9cclxuICAgICAgICBjb21lbnRhcmlvLnVzdWFyaW9JZCA9IHVzdWFyaW8udWlkO1xyXG4gICAgICAgIGNvbWVudGFyaW8udXN1YXJpb05vbWJyZSA9IHVzdWFyaW8uZGlzcGxheU5hbWU7XHJcblxyXG4gICAgICAgIC8vdG9tYXIgY29waWEgZGUgY29tZW50YXJpb3MgeSBhZ3JlZ2FybG9zIGFsIGFycmVnbG9cclxuICAgICAgICBjb25zdCBudWV2b3NDb21lbnRhcmlvcyA9IFsuLi5jb21lbnRhcmlvcywgY29tZW50YXJpb11cclxuXHJcbiAgICAgICAgLy9hY3R1YWxpemFyIGJkZFxyXG4gICAgICAgIGZpcmViYXNlLmRiLmNvbGxlY3Rpb24oJ3Byb2R1Y3RvcycpLmRvYyhpZCkudXBkYXRlKHtcclxuICAgICAgICAgICAgY29tZW50YXJpb3M6IG51ZXZvc0NvbWVudGFyaW9zXHJcbiAgICAgICAgfSlcclxuXHJcbiAgICAgICAgLy9jdHVhbGl6YXIgZWwgc3RhdGVcclxuICAgICAgICBzZXRQcm9kdWN0byh7XHJcbiAgICAgICAgICAgIC4uLnByb2R1Y3RvLFxyXG4gICAgICAgICAgICBjb21lbnRhcmlvczogbnVldm9zQ29tZW50YXJpb3NcclxuICAgICAgICB9KVxyXG4gICAgICAgIHNldENvbnN1bHRhckRCKHRydWUpO1xyXG5cclxuICAgIH1cclxuXHJcbiAgICAvL3JldmlzYXIgcXVlIGVsIGNyZWFkb3IgZGVsIHByb2Qgc2VhIGVsIG1pc21vIHF1ZSBlc3RhIGF1dGVudGljYWRvXHJcbiAgICBjb25zdCBwdWVkZUJvcnJhciA9ICgpID0+IHtcclxuICAgICAgICBpZighdXN1YXJpbykgcmV0dXJuIGZhbHNlO1xyXG5cclxuICAgICAgICBpZihjcmVhZG9yLmlkID09PSB1c3VhcmlvLnVpZCl7XHJcbiAgICAgICAgICAgIHJldHVybiB0cnVlO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAvLyBlbGltaW5hIHVuIHByb2R1Y3RvIGRlIGxhIGJkZFxyXG4gICAgY29uc3QgZWxpbWluYXJQcm9kdWN0byA9IGFzeW5jICgpID0+IHtcclxuICAgICAgICBpZighdXN1YXJpbykgcmV0dXJuIHJvdXRlci5wdXNoKCcvbG9naW4nKTtcclxuICAgICAgICBpZihjcmVhZG9yLmlkICE9PSB1c3VhcmlvLnVpZCl7XHJcbiAgICAgICAgICAgIHJldHVybiByb3V0ZXIucHVzaCgnLycpO1xyXG4gICAgICAgIH1cclxuICAgICAgICB0cnkge1xyXG4gICAgICAgICAgICBhd2FpdCBmaXJlYmFzZS5kYi5jb2xsZWN0aW9uKCdwcm9kdWN0b3MnKS5kb2MoaWQpLmRlbGV0ZSgpO1xyXG4gICAgICAgICAgICBhd2FpdCBmaXJlYmFzZS5zdG9yYWdlLnJlZihgcHJvZHVjdG9zLyR7aW1hZ2VQYXRofWApLmRlbGV0ZSgpO1xyXG4gICAgICAgICAgICByb3V0ZXIucHVzaCgnLycpO1xyXG4gICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKGVycm9yKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgcmV0dXJuIChcclxuICAgICAgICA8TGF5b3V0PlxyXG4gICAgICAgICAgICA8PlxyXG4gICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgIGVycm9yIC8qICYmIHByb2R1Y3RvLmxlbmd0aCA9PT0gMCAqL1xyXG4gICAgICAgICAgICAgICAgICAgICAgICA/IDxFcnJvcjQwNCAvPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA6XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiY29udGVuZWRvclwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGgxIGNzcz17Y3NzYFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbWFyZ2luLXRvcDogNXJlbTsgICAgXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGB9PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHtub21icmV9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2gxPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPENvbnRlbmVkb3JQcm9kdWN0bz5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cD5QdWJsaWNhZG8gaGFjZToge2Zvcm1hdERpc3RhbmNlVG9Ob3cobmV3IERhdGUoY3JlYWRvKSwgeyBsb2NhbGU6IGVzIH0pfTwvcD5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHA+UG9yOiB7Y3JlYWRvci5ub21icmV9IGRlIHtlbXByZXNhfTwvcD5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBzcmM9e2ltYWdlblVybH0gYWx0PVwiaW1nXCIgLz5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHA+e2Rlc2NyaXBjaW9ufTwvcD5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge3VzdWFyaW8gJiZcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIChcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aDI+QWdyZWdhIHR1IGNvbWVudGFyaW88L2gyPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8Zm9ybVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb25TdWJtaXQ9e2hhbmRsZVN1Ym1pdENvbWVudGFyaW99XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgID5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxDYW1wbz5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXRcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdHlwZT1cInRleHRcIlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lPVwibWVuc2FqZVwiXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2hhbmdlPXtjb21lbnRhcmlvQ2hhbmdlfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L0NhbXBvPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPElucHV0U3VibWl0XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdHlwZT1cInN1Ym1pdFwiXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU9XCJBZ3JlZ2FyIGNvbWVudGFyaW9cIlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLz5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9mb3JtPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxoMiBjc3M9e2Nzc2BcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbWFyZ2luOiAycmVtIDA7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPkNvbWVudGFyaW9zPC9oMj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29tZW50YXJpb3MubGVuZ3RoID09PSAwXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPyAnQcO6biBubyBoYXkgY29tZW50YXJpb3MnXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgOiBcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAoXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx1bD5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHtjb21lbnRhcmlvcy5tYXAoKGNvbWVudGFyaW8sIGluZGV4KSA9PiAoXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGtleT17YCR7Y29tZW50YXJpby51c3VhcmlvSWR9LSR7aW5kZXh9YH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY3NzPXtjc3NgXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBib3JkZXI6IDFweCBzb2xpZCAjZTFlMWUxO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcGFkZGluZzogMnJlbTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjc3M9e2Nzc2BcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmb250LXdlaWdodDogYm9sZDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPntjb21lbnRhcmlvLnVzdWFyaW9Ob21icmV9eycgJ308L3NwYW4+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb21lbnRvOlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3A+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwPntjb21lbnRhcmlvLm1lbnNhamV9PC9wPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBlc0NyZWFkb3IoY29tZW50YXJpby51c3VhcmlvSWQpXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAmJiA8Q3JlYWRvclByb2R1Y3RvPkVzIENyZWFkb3I8L0NyZWFkb3JQcm9kdWN0bz5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvbGk+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICApKX1cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC91bD5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICApXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YXNpZGU+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxCb3RvblxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGFyZ2V0PVwiX2JsYW5rXCJcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJnQ29sb3I9XCJ0cnVlXCJcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhyZWY9e3VybH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPlZpc2l0YXIgVXJsPC9Cb3Rvbj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY3NzPXtjc3NgXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbWFyZ2luLXRvcDogNXJlbTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYH0+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNzcz17Y3NzYFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBgfT57dm90b3N9IHZvdG9zPC9wPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVzdWFyaW8gJiYgIWhhVm90YWRvUmVzKHVzdWFyaW8udWlkKSAmJlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxCb3RvblxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbkNsaWNrPXt2b3RhclByb2R1Y3RvfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgID5Wb3RhcjwvQm90b24+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYXNpZGU+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L0NvbnRlbmVkb3JQcm9kdWN0bz5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwdWVkZUJvcnJhcigpIFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICYmXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPEJvdG9uXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2xpY2s9e2VsaW1pbmFyUHJvZHVjdG99XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPkVsaW1pbmFyIFByb2R1Y3RvPC9Cb3Rvbj4gXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICA8Lz5cclxuICAgICAgICA8L0xheW91dD5cclxuICAgIClcclxufVxyXG5leHBvcnQgZGVmYXVsdCBQcm9kdWN0bzsiXX0= */",
  toString: _EMOTION_STRINGIFIED_CSS_ERROR__
};

var _ref5 = false ? undefined : {
  name: "1ivahqk-Producto",
  styles: "margin:2rem 0;label:Producto;",
  map: "/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */",
  toString: _EMOTION_STRINGIFIED_CSS_ERROR__
};

var _ref6 = false ? undefined : {
  name: "b4z95t-Producto",
  styles: "text-align:center;margin-top:5rem;label:Producto;",
  map: "/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */",
  toString: _EMOTION_STRINGIFIED_CSS_ERROR__
};

var Producto = function Producto() {
  _s();

  //routing para obtener el id actual
  var router = Object(next_router__WEBPACK_IMPORTED_MODULE_6__["useRouter"])();
  var id = router.query.id;

  var _useContext = Object(react__WEBPACK_IMPORTED_MODULE_5__["useContext"])(_firebase__WEBPACK_IMPORTED_MODULE_7__["FirebaseContext"]),
      firebase = _useContext.firebase,
      usuario = _useContext.usuario;

  var _useState = Object(react__WEBPACK_IMPORTED_MODULE_5__["useState"])({}),
      producto = _useState[0],
      setProducto = _useState[1];

  var _useState2 = Object(react__WEBPACK_IMPORTED_MODULE_5__["useState"])(false),
      error = _useState2[0],
      setError = _useState2[1];

  var _useState3 = Object(react__WEBPACK_IMPORTED_MODULE_5__["useState"])({}),
      comentario = _useState3[0],
      setComentario = _useState3[1];

  var _useState4 = Object(react__WEBPACK_IMPORTED_MODULE_5__["useState"])(true),
      consultarDB = _useState4[0],
      setConsultarDB = _useState4[1]; // const isMounted = useRef(true);


  var isMounted = react_is_mounted_hook__WEBPACK_IMPORTED_MODULE_15___default()();
  var comentarios = producto.comentarios,
      creado = producto.creado,
      descripcion = producto.descripcion,
      empresa = producto.empresa,
      nombre = producto.nombre,
      url = producto.url,
      imagenUrl = producto.imagenUrl,
      votos = producto.votos,
      creador = producto.creador,
      haVotado = producto.haVotado,
      imagePath = producto.imagePath;
  Object(react__WEBPACK_IMPORTED_MODULE_5__["useEffect"])(function () {
    if (id && consultarDB && isMounted) {
      var obtenerProducto = /*#__PURE__*/function () {
        var _ref7 = Object(C_Users_lokom_Desktop_camilo_react_estudio_pryectos_de_juan_producthuntnext_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3__["default"])( /*#__PURE__*/C_Users_lokom_Desktop_camilo_react_estudio_pryectos_de_juan_producthuntnext_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default.a.mark(function _callee() {
          var res, producto;
          return C_Users_lokom_Desktop_camilo_react_estudio_pryectos_de_juan_producthuntnext_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default.a.wrap(function _callee$(_context) {
            while (1) {
              switch (_context.prev = _context.next) {
                case 0:
                  _context.next = 2;
                  return firebase.db.collection('productos').doc(id);

                case 2:
                  res = _context.sent;
                  _context.next = 5;
                  return res.get();

                case 5:
                  producto = _context.sent;

                  if (producto.exists || isMounted()) {
                    setProducto(producto.data());
                    setConsultarDB(false);
                    setError(false);
                  } else {
                    setConsultarDB(false);
                    setError(true);
                  }

                case 7:
                case "end":
                  return _context.stop();
              }
            }
          }, _callee);
        }));

        return function obtenerProducto() {
          return _ref7.apply(this, arguments);
        };
      }();

      obtenerProducto();
    }

    isMounted(false); // return () => {
    //             isMounted.current = false;
    //         }
  }, [id, producto, isMounted]);
  if (Object.keys(producto).length === 0 && !error) return 'Cargando...'; //Administrar y valida los votos

  var votarProducto = function votarProducto() {
    if (!usuario) {
      return router.push('/login');
    } //Verificar si usuario actual ha votado


    if (haVotado !== null && haVotado !== void 0 && haVotado.includes(usuario.uid)) return; //obtener y sumar un nuevo voto

    var nuevoTotal = votos + 1; //guardar el id del usuario que h votado

    var nuevoHaVotado = [].concat(Object(C_Users_lokom_Desktop_camilo_react_estudio_pryectos_de_juan_producthuntnext_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_1__["default"])(haVotado), [usuario.uid]); //actualizar en la bdd

    firebase.db.collection('productos').doc(id).update({
      votos: nuevoTotal,
      haVotado: nuevoHaVotado
    }); //Actualizar el state

    setProducto(_objectSpread(_objectSpread({}, producto), {}, {
      votos: nuevoTotal
    }));
    setConsultarDB(true); //hay un voo por lo tanto consultar a la BDD
  }; //funcion para saber si ya ha comentado el usuario


  var haVotadoRes = function haVotadoRes(id) {
    return haVotado.some(function (voto) {
      return voto === id;
    });
  }; //funciones para crear comentarios


  var comentarioChange = function comentarioChange(e) {
    setComentario(_objectSpread(_objectSpread({}, comentario), {}, Object(C_Users_lokom_Desktop_camilo_react_estudio_pryectos_de_juan_producthuntnext_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__["default"])({}, e.target.name, e.target.value)));
  };

  var esCreador = function esCreador(id) {
    if (creador.id === id) {
      return true;
    }
  };

  var handleSubmitComentario = function handleSubmitComentario(e) {
    e.preventDefault();

    if (!usuario) {
      return router.push('/login');
    }

    if (comentario.mensaje.trim() === '') return; //info extra al comentario

    comentario.usuarioId = usuario.uid;
    comentario.usuarioNombre = usuario.displayName; //tomar copia de comentarios y agregarlos al arreglo

    var nuevosComentarios = [].concat(Object(C_Users_lokom_Desktop_camilo_react_estudio_pryectos_de_juan_producthuntnext_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_1__["default"])(comentarios), [comentario]); //actualizar bdd

    firebase.db.collection('productos').doc(id).update({
      comentarios: nuevosComentarios
    }); //ctualizar el state

    setProducto(_objectSpread(_objectSpread({}, producto), {}, {
      comentarios: nuevosComentarios
    }));
    setConsultarDB(true);
  }; //revisar que el creador del prod sea el mismo que esta autenticado


  var puedeBorrar = function puedeBorrar() {
    if (!usuario) return false;

    if (creador.id === usuario.uid) {
      return true;
    }
  }; // elimina un producto de la bdd


  var eliminarProducto = /*#__PURE__*/function () {
    var _ref8 = Object(C_Users_lokom_Desktop_camilo_react_estudio_pryectos_de_juan_producthuntnext_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3__["default"])( /*#__PURE__*/C_Users_lokom_Desktop_camilo_react_estudio_pryectos_de_juan_producthuntnext_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default.a.mark(function _callee2() {
      return C_Users_lokom_Desktop_camilo_react_estudio_pryectos_de_juan_producthuntnext_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default.a.wrap(function _callee2$(_context2) {
        while (1) {
          switch (_context2.prev = _context2.next) {
            case 0:
              if (usuario) {
                _context2.next = 2;
                break;
              }

              return _context2.abrupt("return", router.push('/login'));

            case 2:
              if (!(creador.id !== usuario.uid)) {
                _context2.next = 4;
                break;
              }

              return _context2.abrupt("return", router.push('/'));

            case 4:
              _context2.prev = 4;
              _context2.next = 7;
              return firebase.db.collection('productos').doc(id)["delete"]();

            case 7:
              _context2.next = 9;
              return firebase.storage.ref("productos/".concat(imagePath))["delete"]();

            case 9:
              router.push('/');
              _context2.next = 15;
              break;

            case 12:
              _context2.prev = 12;
              _context2.t0 = _context2["catch"](4);
              console.log(_context2.t0);

            case 15:
            case "end":
              return _context2.stop();
          }
        }
      }, _callee2, null, [[4, 12]]);
    }));

    return function eliminarProducto() {
      return _ref8.apply(this, arguments);
    };
  }();

  return Object(_emotion_react__WEBPACK_IMPORTED_MODULE_10__["jsx"])(_components_layouts_Layout__WEBPACK_IMPORTED_MODULE_9__["default"], {
    __self: _this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 175,
      columnNumber: 9
    }
  }, Object(_emotion_react__WEBPACK_IMPORTED_MODULE_10__["jsx"])(react__WEBPACK_IMPORTED_MODULE_5___default.a.Fragment, null, error
  /* && producto.length === 0 */
  ? Object(_emotion_react__WEBPACK_IMPORTED_MODULE_10__["jsx"])(_components_layouts_404__WEBPACK_IMPORTED_MODULE_8__["default"], {
    __self: _this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 179,
      columnNumber: 27
    }
  }) : Object(_emotion_react__WEBPACK_IMPORTED_MODULE_10__["jsx"])("div", {
    className: "contenedor",
    __self: _this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 181,
      columnNumber: 25
    }
  }, Object(_emotion_react__WEBPACK_IMPORTED_MODULE_10__["jsx"])("h1", {
    css: _ref6,
    __self: _this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 182,
      columnNumber: 29
    }
  }, nombre), Object(_emotion_react__WEBPACK_IMPORTED_MODULE_10__["jsx"])(ContenedorProducto, {
    __self: _this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 188,
      columnNumber: 29
    }
  }, Object(_emotion_react__WEBPACK_IMPORTED_MODULE_10__["jsx"])("div", {
    __self: _this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 189,
      columnNumber: 33
    }
  }, Object(_emotion_react__WEBPACK_IMPORTED_MODULE_10__["jsx"])("p", {
    __self: _this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 190,
      columnNumber: 37
    }
  }, "Publicado hace: ", date_fns_formatDistanceToNow__WEBPACK_IMPORTED_MODULE_11___default()(new Date(creado), {
    locale: date_fns_locale__WEBPACK_IMPORTED_MODULE_12__["es"]
  })), Object(_emotion_react__WEBPACK_IMPORTED_MODULE_10__["jsx"])("p", {
    __self: _this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 191,
      columnNumber: 37
    }
  }, "Por: ", creador.nombre, " de ", empresa), Object(_emotion_react__WEBPACK_IMPORTED_MODULE_10__["jsx"])("img", {
    src: imagenUrl,
    alt: "img",
    __self: _this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 192,
      columnNumber: 37
    }
  }), Object(_emotion_react__WEBPACK_IMPORTED_MODULE_10__["jsx"])("p", {
    __self: _this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 193,
      columnNumber: 37
    }
  }, descripcion), usuario && Object(_emotion_react__WEBPACK_IMPORTED_MODULE_10__["jsx"])(react__WEBPACK_IMPORTED_MODULE_5___default.a.Fragment, null, Object(_emotion_react__WEBPACK_IMPORTED_MODULE_10__["jsx"])("h2", {
    __self: _this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 197,
      columnNumber: 49
    }
  }, "Agrega tu comentario"), Object(_emotion_react__WEBPACK_IMPORTED_MODULE_10__["jsx"])("form", {
    onSubmit: handleSubmitComentario,
    __self: _this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 198,
      columnNumber: 49
    }
  }, Object(_emotion_react__WEBPACK_IMPORTED_MODULE_10__["jsx"])(_components_ui_Formulario__WEBPACK_IMPORTED_MODULE_13__["Campo"], {
    __self: _this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 201,
      columnNumber: 53
    }
  }, Object(_emotion_react__WEBPACK_IMPORTED_MODULE_10__["jsx"])("input", {
    type: "text",
    name: "mensaje",
    onChange: comentarioChange,
    __self: _this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 202,
      columnNumber: 57
    }
  })), Object(_emotion_react__WEBPACK_IMPORTED_MODULE_10__["jsx"])(_components_ui_Formulario__WEBPACK_IMPORTED_MODULE_13__["InputSubmit"], {
    type: "submit",
    value: "Agregar comentario",
    __self: _this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 208,
      columnNumber: 53
    }
  }))), Object(_emotion_react__WEBPACK_IMPORTED_MODULE_10__["jsx"])("h2", {
    css: _ref5,
    __self: _this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 216,
      columnNumber: 37
    }
  }, "Comentarios"), comentarios.length === 0 ? 'Aún no hay comentarios' : Object(_emotion_react__WEBPACK_IMPORTED_MODULE_10__["jsx"])("ul", {
    __self: _this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 225,
      columnNumber: 49
    }
  }, comentarios.map(function (comentario, index) {
    return Object(_emotion_react__WEBPACK_IMPORTED_MODULE_10__["jsx"])("li", {
      key: "".concat(comentario.usuarioId, "-").concat(index),
      css: _ref4,
      __self: _this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 227,
        columnNumber: 57
      }
    }, Object(_emotion_react__WEBPACK_IMPORTED_MODULE_10__["jsx"])("p", {
      __self: _this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 234,
        columnNumber: 61
      }
    }, Object(_emotion_react__WEBPACK_IMPORTED_MODULE_10__["jsx"])("span", {
      css: _ref3,
      __self: _this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 235,
        columnNumber: 65
      }
    }, comentario.usuarioNombre, ' '), "comento:"), Object(_emotion_react__WEBPACK_IMPORTED_MODULE_10__["jsx"])("p", {
      __self: _this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 242,
        columnNumber: 61
      }
    }, comentario.mensaje), esCreador(comentario.usuarioId) && Object(_emotion_react__WEBPACK_IMPORTED_MODULE_10__["jsx"])(CreadorProducto, {
      __self: _this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 245,
        columnNumber: 68
      }
    }, "Es Creador"));
  }))), Object(_emotion_react__WEBPACK_IMPORTED_MODULE_10__["jsx"])("aside", {
    __self: _this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 253,
      columnNumber: 33
    }
  }, Object(_emotion_react__WEBPACK_IMPORTED_MODULE_10__["jsx"])(_components_ui_Boton__WEBPACK_IMPORTED_MODULE_14__["default"], {
    target: "_blank",
    bgColor: "true",
    href: url,
    __self: _this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 254,
      columnNumber: 37
    }
  }, "Visitar Url"), Object(_emotion_react__WEBPACK_IMPORTED_MODULE_10__["jsx"])("div", {
    css: _ref2,
    __self: _this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 259,
      columnNumber: 37
    }
  }, Object(_emotion_react__WEBPACK_IMPORTED_MODULE_10__["jsx"])("p", {
    css: _ref,
    __self: _this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 263,
      columnNumber: 41
    }
  }, votos, " votos"), usuario && !haVotadoRes(usuario.uid) && Object(_emotion_react__WEBPACK_IMPORTED_MODULE_10__["jsx"])(_components_ui_Boton__WEBPACK_IMPORTED_MODULE_14__["default"], {
    onClick: votarProducto,
    __self: _this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 269,
      columnNumber: 45
    }
  }, "Votar")))), puedeBorrar() && Object(_emotion_react__WEBPACK_IMPORTED_MODULE_10__["jsx"])(_components_ui_Boton__WEBPACK_IMPORTED_MODULE_14__["default"], {
    onClick: eliminarProducto,
    __self: _this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 279,
      columnNumber: 33
    }
  }, "Eliminar Producto"))));
};

_s(Producto, "GaF75xfUyRwlg2xmt0Apc2pPENo=", false, function () {
  return [next_router__WEBPACK_IMPORTED_MODULE_6__["useRouter"], react_is_mounted_hook__WEBPACK_IMPORTED_MODULE_15___default.a];
});

_c = Producto;
/* harmony default export */ __webpack_exports__["default"] = (Producto);

var _c;

$RefreshReg$(_c, "Producto");

;
    var _a, _b;
    // Legacy CSS implementations will `eval` browser code in a Node.js context
    // to extract CSS. For backwards compatibility, we need to check we're in a
    // browser context before continuing.
    if (typeof self !== 'undefined' &&
        // AMP / No-JS mode does not inject these helpers:
        '$RefreshHelpers$' in self) {
        var currentExports = module.__proto__.exports;
        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;
        // This cannot happen in MainTemplate because the exports mismatch between
        // templating and execution.
        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.i);
        // A module can be accepted automatically based on its exports, e.g. when
        // it is a Refresh Boundary.
        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {
            // Save the previous exports on update so we can compare the boundary
            // signatures.
            module.hot.dispose(function (data) {
                data.prevExports = currentExports;
            });
            // Unconditionally accept an update to this module, we'll check if it's
            // still a Refresh Boundary later.
            module.hot.accept();
            // This field is set when the previous version of this module was a
            // Refresh Boundary, letting us know we need to check for invalidation or
            // enqueue an update.
            if (prevExports !== null) {
                // A boundary can become ineligible if its exports are incompatible
                // with the previous exports.
                //
                // For example, if you add/remove/change exports, we'll want to
                // re-execute the importing modules, and force those components to
                // re-render. Similarly, if you convert a class component to a
                // function, we want to invalidate the boundary.
                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {
                    module.hot.invalidate();
                }
                else {
                    self.$RefreshHelpers$.scheduleUpdate();
                }
            }
        }
        else {
            // Since we just executed the code for the module, it's possible that the
            // new exports made it ineligible for being a boundary.
            // We only care about the case when we were _previously_ a boundary,
            // because we already accepted this update (accidental side effect).
            var isNoLongerABoundary = prevExports !== null;
            if (isNoLongerABoundary) {
                module.hot.invalidate();
            }
        }
    }

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../node_modules/next/dist/compiled/webpack/harmony-module.js */ "./node_modules/next/dist/compiled/webpack/harmony-module.js")(module)))

/***/ })

})
//# sourceMappingURL=data:application/json;charset=utf-8;base64,